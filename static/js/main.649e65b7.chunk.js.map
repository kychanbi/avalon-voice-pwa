{"version":3,"sources":["Constant.tsx","state/playerSetting.tsx","views/components/TabPanel.tsx","views/SettingTab.tsx","utils/utils.ts","views/MC.tsx","views/Main.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Constants","totalNumberOfPlayers","good","evil","label","isPercivalPresent","isMordredPresent","isMorganaPresent","isOberonPresent","isLancelotPresent","isClericPresent","isBlindHunterPresent","isMutineerPresent","isArthurPresent","isChangelingPresent","isScionPresent","isMorganLeFayPresent","isNewbieMode","useLancelotAlternativeRules","langs","presets","totalNumberOfPlayer","desc","theme","light","palette","type","dark","Object","freeze","GameMode","defaultAllSetting","speakingRate","countingRate","isDarkMode","gameMode","Avalon","calcGoodEvilNumber","total","numberOfGood","numberOfEvil","SettingContext","React","createContext","allSetting","editSetting","editAllCharacterSettings","SettingContextProvider","children","useState","setAllSetting","Provider","value","settingType","tempSetting","TabPanel","currentTab","role","hidden","id","Box","sx","p","useStyle","makeStyles","settingTab","backgroundColor","background","paper","width","height","padding","minWidth","selectFormControl","margin","spacing","sliderWrap","maxWidth","closeBtn","position","top","right","cursor","zIndex","presetBtn","labels","SettingTab","closeDialog","classes","useContext","formState","setFormState","handleChange","event","name","target","checked","newVal","undefined","handleSliderChange","Array","isArray","className","Fab","onClick","Tabs","onChange","Tab","Quest","ButtonGroup","color","keys","map","key","Button","setting","handlePresetClick","FormControl","InputLabel","Select","labelId","n","MenuItem","FormGroup","FormControlLabel","control","Checkbox","Typography","gutterBottom","Slider","defaultValue","valueLabelDisplay","min","max","step","findVoiceByLang","voices","window","speechSynthesis","getVoices","foundVoiceArr","filter","v","includes","lang","found","console","debug","speak","text","rate","synth","utterance","SpeechSynthesisUtterance","voice","log","endSpeaking","cancel","useStyles","mcCard","playBtnWrap","textAlign","CurrentSettingDisplay","gameSetting","variant","PlayButton","props","playOnClick","tabIndex","onKeyDown","StopButton","stopPlaying","useMCPageHook","scriptArr","setScriptText","scriptDisplay","setScriptDisplay","areVoicesLoaded","setAreVoicesLoad","useEffect","s","numEvilOpenEyes","scriptAlternativeRule","scriptAlternativeRule2","scriptEvil","generateAvalonScript","s0","s_unknownEvils","length","join","replace","generateQuestScript","t","x","reduce","ac","curr","concat","onvoiceschanged","playScript","useCallback","forEach","MCPage","Card","CircularProgress","root","boxSizing","fab","bottom","fabLeft","left","Main","toggleDarkMode","appliedTheme","useMemo","createMuiTheme","isDialogOpen","setIsDialogOpen","Dialog","open","onClose","fullWidth","App","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","document","documentElement","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.649e65b7.chunk.js","sourcesContent":["import { PresetSetting } from './state/playerSetting';\nimport { ThemeOptions } from '@material-ui/core';\n\ninterface NumberOfPlayers {\n  good: number,\n  evil: number\n}\n\ninterface ConstantsInterface {\n  totalNumberOfPlayers:\n    Record<string, NumberOfPlayers>,\n  label:\n    Record<string, string>,\n  langs:string[],\n  presets: { [key: string]: PresetSetting; },\n  theme: {\n    light: ThemeOptions,\n    dark: ThemeOptions\n  }\n}\n\nconst Constants: ConstantsInterface = {\n  totalNumberOfPlayers: {\n    5: {\n      good: 3,\n      evil: 2,\n    },\n    6: {\n      good: 4,\n      evil: 2,\n    },\n    7: {\n      good: 4,\n      evil: 3,\n    },\n    8: {\n      good: 5,\n      evil: 3,\n    },\n    9: {\n      good: 6,\n      evil: 3,\n    },\n    10: {\n      good: 6,\n      evil: 4,\n    },\n  },\n  label: {\n    isPercivalPresent: '派西維爾',\n    isMordredPresent: '莫德雷德',\n    isMorganaPresent: '莫甘娜',\n    isOberonPresent: '奧柏倫',\n    isLancelotPresent: '蘭斯洛特',\n    isClericPresent: 'Cleric',\n    isBlindHunterPresent: 'BlindHunter',\n    isMutineerPresent: 'Mutineer',\n    isArthurPresent: 'Arthur',\n    isChangelingPresent: 'Changeling',\n    isScionPresent: 'Scion',\n    isMorganLeFayPresent: 'Morgan Le Fay',\n    isNewbieMode: '新手模式',\n    useLancelotAlternativeRules: '使用蘭斯洛特相認規則',\n\n  },\n  langs: ['zh-HK', 'yue_HK_#Hant'],\n  presets: {\n    'preset-6': {\n      totalNumberOfPlayer: '6',\n      isPercivalPresent: false,\n      isMordredPresent: false,\n      isMorganaPresent: false,\n      isOberonPresent: false,\n      isLancelotPresent: true,\n      desc: '經典六人',\n    },\n    'preset-7': {\n      totalNumberOfPlayer: '7',\n      isPercivalPresent: false,\n      isMordredPresent: false,\n      isMorganaPresent: false,\n      isOberonPresent: true,\n      isLancelotPresent: true,\n      desc: '經典七人',\n    },\n    'preset-8': {\n      totalNumberOfPlayer: '8',\n      isPercivalPresent: true,\n      isMordredPresent: true,\n      isMorganaPresent: true,\n      isOberonPresent: false,\n      isLancelotPresent: true,\n      desc: '經典八人',\n    },\n  },\n  theme: {\n    light: {\n      palette: {\n        type: 'light',\n      },\n    },\n    dark: {\n      palette: {\n        type: 'dark',\n        // primary: {\n        //   // Purple and green play nicely together.\n        //   main: purple[500],\n        // },\n      },\n    },\n  },\n};\nObject.freeze(Constants);\n\nexport { Constants };\n","import React, { useState } from 'react';\nimport { Constants } from '../Constant';\n\nexport interface AvalonCharacterSetting{\n  totalNumberOfPlayer: string,\n  isPercivalPresent: boolean,\n  isMordredPresent: boolean,\n  isMorganaPresent: boolean,\n  isOberonPresent: boolean,\n  isLancelotPresent: boolean,\n}\n\nexport interface QuestCharacterSetting{\n  isClericPresent: boolean,\n  isArthurPresent: boolean,\n  isBlindHunterPresent: boolean,\n  isMutineerPresent: boolean,\n  isChangelingPresent: boolean,\n  isScionPresent: boolean,\n  isMorganLeFayPresent: boolean,\n}\n\nexport enum GameMode{\n  Avalon = 'avalon',\n  Quest = 'quest',\n}\n\nexport interface AllSetting extends AvalonCharacterSetting, QuestCharacterSetting, VoiceSetting{\n  isDarkMode: boolean,\n  isNewbieMode: boolean,\n  useLancelotAlternativeRules: boolean,\n  gameMode: GameMode\n}\n\nexport interface VoiceSetting{\n  speakingRate: number,\n  countingRate: number,\n}\n\nexport interface PresetSetting extends AvalonCharacterSetting{\n  desc: string;\n}\n\n// export interface SettingFormState extends VoiceSetting, CharacterSetting {\n//   isDarkMode: boolean,\n//   isNewbieMode: boolean,\n// }\n\n// export const defaultFormSettingState: AllSetting = {\n\n// };\n\nexport const defaultAllSetting: AllSetting = {\n  totalNumberOfPlayer: '5',\n  isPercivalPresent: false,\n  isMordredPresent: false,\n  isMorganaPresent: false,\n  isOberonPresent: false,\n  isLancelotPresent: false,\n  useLancelotAlternativeRules: false,\n  speakingRate: 0.8,\n  countingRate: 0.9,\n  isDarkMode: false,\n  isNewbieMode: false,\n  gameMode: GameMode.Avalon,\n  isBlindHunterPresent: true,\n  isClericPresent: true,\n  isMutineerPresent: false,\n  isArthurPresent: false,\n  isChangelingPresent: false,\n  isMorganLeFayPresent: true,\n  isScionPresent: false,\n};\n\ninterface GoodEvilNumber{\n  numberOfGood: number,\n  numberOfEvil: number\n}\n\nexport function calcGoodEvilNumber(total: string): GoodEvilNumber{\n  return {\n    numberOfGood: Constants.totalNumberOfPlayers[total].good,\n    numberOfEvil: Constants.totalNumberOfPlayers[total].evil,\n  } as GoodEvilNumber;\n}\n\ninterface SettingContextType{\n  allSetting: AllSetting,\n  editSetting: Function,\n  editAllCharacterSettings: Function\n}\n\nexport const SettingContext = React.createContext<SettingContextType>({\n  allSetting: defaultAllSetting,\n  editSetting: () => {\n  },\n  editAllCharacterSettings: () => {\n  },\n});\n\ninterface SettingContextProviderProp{\n  children: React.ReactNode;\n}\n\nexport const SettingContextProvider = ({ children }: SettingContextProviderProp) => {\n  const [allSetting, setAllSetting] = useState<AllSetting>(\n    defaultAllSetting,\n  );\n  const editAllCharacterSettings = (value: AvalonCharacterSetting) => {\n    const tempSetting = { ...allSetting, ...value };\n    setAllSetting(tempSetting);\n  };\n  const editSetting = (settingType: keyof AllSetting, value: any) => {\n    const tempSetting = {\n      ...allSetting,\n      [settingType]: value,\n    };\n    setAllSetting(tempSetting);\n  };\n  return (\n    <SettingContext.Provider value={{\n      allSetting,\n      editSetting,\n      editAllCharacterSettings,\n    }}>\n      {children}\n    </SettingContext.Provider>\n  );\n};\n","import React from 'react';\nimport { Box } from '@material-ui/core';\n\ninterface TabPanelProps{\n  children: React.ReactNode,\n  value: string,\n  currentTab: string,\n}\n\nexport const TabPanel = ({\n  children,\n  value,\n  currentTab,\n}: TabPanelProps) => (\n  <div\n    role='tabpanel'\n    hidden={value !== currentTab}\n    id={`simple-tabpanel-${value}`}\n    aria-labelledby={`simple-tab-${value}`}\n  >\n    {value === currentTab && (\n      <Box sx={{ p: 0 }}>\n        {children}\n      </Box>\n    )}\n  </div>\n);\n","import React, { EventHandler, useContext, useState } from 'react';\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles,\n  FormControl, FormControlLabel, Checkbox, FormGroup, Slider, Typography, Fab,\n  Button, ButtonGroup, Tabs, Tab,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  AllSetting,\n  defaultAllSetting, GameMode, SettingContext,\n} from '../state/playerSetting';\nimport { Constants } from '../Constant';\nimport { TabPanel } from './components/TabPanel';\n\nconst useStyle = makeStyles((theme) => ({\n  settingTab: {\n    backgroundColor: theme.palette.background.paper,\n    width: '70%',\n    height: '80%',\n    padding: '3em 1.5em 5em',\n    minWidth: 320,\n  },\n  selectFormControl: {\n    margin: `${theme.spacing(1)}px 0`,\n    minWidth: '10em',\n  },\n  sliderWrap: {\n    maxWidth: '55vw',\n  },\n  closeBtn: {\n    position: 'absolute',\n    top: theme.spacing(3),\n    right: theme.spacing(3),\n    cursor: 'pointer',\n    zIndex: 10,\n  },\n  presetBtn: {\n    margin: `${theme.spacing(2)}px 0`,\n  },\n}));\n\nconst labels = Constants.label;\n\nconst SettingTab = ({ closeDialog }: { closeDialog: EventHandler<any> }) => {\n  const classes = useStyle();\n  const { allSetting, editSetting, editAllCharacterSettings } = useContext(SettingContext);\n  const [formState, setFormState] = useState<AllSetting>(\n    allSetting ?? defaultAllSetting,\n  );\n  const handleSwitchTab = (event: React.ChangeEvent<{}>, value: GameMode) => {\n    setFormState({ ...formState, gameMode: value });\n    editSetting('gameMode', value);\n  };\n  const handleChange = <K extends keyof AllSetting>(\n    event: React.ChangeEvent<{ name?: string | undefined, value: unknown, checked?: boolean }>,\n  ) => {\n    const name = event.target.name as K;\n    const value = event.target.value as AllSetting[K];\n    const checked = event.target.checked as boolean;\n    const newVal = checked === undefined ? value : checked;\n    setFormState({ ...formState, [name]: newVal });\n    editSetting(name, newVal);\n  };\n  const handleSliderChange = (name: string) => (\n    event: React.ChangeEvent<{}>,\n    value: number | number[],\n  ) => {\n    if (Array.isArray(value)) return;\n    setFormState({ ...formState, [name]: value });\n    editSetting(name, value);\n  };\n\n  const handlePresetClick = (id: string) => {\n    const setting = Constants.presets[id];\n    setFormState({ ...formState, ...setting });\n    editAllCharacterSettings(setting);\n  };\n\n  return (\n    <div className={classes.settingTab}>\n      <Fab className={classes.closeBtn} onClick={closeDialog}>\n        <CloseIcon />\n      </Fab>\n      <Tabs value={formState.gameMode} onChange={handleSwitchTab} aria-label='tab'>\n        <Tab label='Avalon' value={GameMode.Avalon} />\n        <Tab label='Quest' value={GameMode.Quest} />\n      </Tabs>\n      <TabPanel value={GameMode.Avalon} currentTab={formState.gameMode}>\n        <ButtonGroup className={classes.presetBtn} color='default'>\n          {Object.keys(Constants.presets).map((key) => (\n            <Button key={key} id={key} onClick={(() => handlePresetClick(key))}>\n              {' '}\n              {Constants.presets[key].desc}\n            </Button>\n          ))}\n        </ButtonGroup>\n        <FormControl className={classes.selectFormControl}>\n          <InputLabel>總人數</InputLabel>\n          <Select\n            labelId='select-total-number-of-player-label'\n            id='select-total-number-of-player'\n            value={formState.totalNumberOfPlayer}\n            onChange={handleChange}\n            name='totalNumberOfPlayer'\n          >\n            {Object.keys(\n              Constants.totalNumberOfPlayers,\n            ).map(\n              (n) => <MenuItem value={n} key={n}>{n}</MenuItem>,\n            )}\n          </Select>\n        </FormControl>\n        <FormGroup>\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isPercivalPresent}\n                onChange={handleChange}\n                name='isPercivalPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isPercivalPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isMordredPresent}\n                onChange={handleChange}\n                name='isMordredPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isMordredPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isMorganaPresent}\n                onChange={handleChange}\n                name='isMorganaPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isMorganaPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isOberonPresent}\n                onChange={handleChange}\n                name='isOberonPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isOberonPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isLancelotPresent}\n                onChange={handleChange}\n                name='isLancelotPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isLancelotPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.useLancelotAlternativeRules}\n                onChange={handleChange}\n                name='useLancelotAlternativeRules'\n                color='primary'\n              />\n            )}\n            label={labels.useLancelotAlternativeRules}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isNewbieMode}\n                onChange={handleChange}\n                name='isNewbieMode'\n                color='primary'\n              />\n            )}\n            label={labels.isNewbieMode}\n          />\n        </FormGroup>\n      </TabPanel>\n      <TabPanel value={GameMode.Quest} currentTab={formState.gameMode}>\n        <FormGroup>\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isClericPresent}\n                onChange={handleChange}\n                name='isClericPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isClericPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isArthurPresent}\n                onChange={handleChange}\n                name='isArthurPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isArthurPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isBlindHunterPresent}\n                onChange={handleChange}\n                name='isBlindHunterPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isBlindHunterPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isMorganLeFayPresent}\n                onChange={handleChange}\n                name='isMorganLeFayPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isMorganLeFayPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isMutineerPresent}\n                onChange={handleChange}\n                name='isMutineerPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isMutineerPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isChangelingPresent}\n                onChange={handleChange}\n                name='isChangelingPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isChangelingPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isScionPresent}\n                onChange={handleChange}\n                name='isScionPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isScionPresent}\n          />\n\n        </FormGroup>\n      </TabPanel>\n      <div className={classes.sliderWrap}>\n        <Typography gutterBottom>\n          speaking speed :\n          {' '}\n          {formState.speakingRate}\n        </Typography>\n        <Slider\n          name='speakingRate'\n          defaultValue={formState.speakingRate}\n          value={formState.speakingRate}\n          onChange={handleSliderChange('speakingRate')}\n          valueLabelDisplay='auto'\n          min={0.5}\n          max={1.5}\n          step={0.05}\n        />\n      </div>\n      <div className={classes.sliderWrap}>\n        <Typography gutterBottom>\n          counting speed :\n          {' '}\n          {formState.countingRate}\n        </Typography>\n        <Slider\n          name='countingRate'\n          defaultValue={formState.countingRate}\n          value={formState.countingRate}\n          onChange={handleSliderChange('countingRate')}\n          valueLabelDisplay='auto'\n          min={0.6}\n          max={1.6}\n          step={0.06}\n        />\n      </div>\n    </div>\n  );\n};\nexport { SettingTab };\n","import { Constants } from '../Constant';\n\nexport function findVoiceByLang(langs: string[]): (SpeechSynthesisVoice | undefined){\n  const synth = window.speechSynthesis;\n  const voices: SpeechSynthesisVoice[] = synth.getVoices();\n  const foundVoiceArr = voices.filter((v) => langs.includes(v.lang));\n  const [found] = foundVoiceArr;\n  console.debug(voices);\n  console.debug(langs);\n  console.debug(found);\n  return found;\n  // synth.voice\n}\nexport async function sleep(ms: number){\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n// export function initVoice(){\n// setVoice(Constants.voice);\n// }\n\n\nexport function speak(text: string, rate = 1){\n  const synth = window.speechSynthesis;\n  const utterance = new SpeechSynthesisUtterance(text);\n  utterance.voice = findVoiceByLang(Constants.langs) as SpeechSynthesisVoice;\n  utterance.lang = utterance.voice?.lang;\n  utterance.rate = rate;\n  // synth.cancel();\n  synth.speak(utterance);\n  console.log(text);\n  // console.log(scriptArr);\n  console.log(utterance);\n  // synth.resume();\n  // synth.cancel();\n}\n\nexport async function pauseSpeaking(s: number){\n  const synth = window.speechSynthesis;\n  synth.pause();\n  await sleep(s * 1000);\n  synth.resume();\n}\n\nexport function endSpeaking(){\n  const synth = window.speechSynthesis;\n  synth.cancel();\n}\n","import React, { EventHandler, useCallback, useContext, useEffect, useState } from 'react';\nimport { Box, Card, CircularProgress, Fab, makeStyles, Typography } from '@material-ui/core';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport {\n  AllSetting, AvalonCharacterSetting,\n  calcGoodEvilNumber,\n  defaultAllSetting,\n  GameMode, QuestCharacterSetting,\n  SettingContext,\n} from '../state/playerSetting';\nimport { endSpeaking, speak } from '../utils/utils';\n\ninterface settingDisplayProps{\n  gameSetting: AllSetting;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  mcCard: {\n    padding: theme.spacing(2),\n    height: '100%',\n  },\n  playBtnWrap: {\n    width: '100%',\n    padding: '1em 0',\n    textAlign: 'center',\n  },\n}));\n\nconst CurrentSettingDisplay = ({ gameSetting }: settingDisplayProps) => {\n  const {\n    totalNumberOfPlayer,\n  } = gameSetting;\n  const {\n    numberOfGood,\n    numberOfEvil,\n  } = calcGoodEvilNumber(\n    totalNumberOfPlayer ?? defaultAllSetting.totalNumberOfPlayer,\n  );\n  return (\n    <Box>\n      <Typography variant='subtitle1'>\n        總人數:\n        {' '}\n        {totalNumberOfPlayer}\n      </Typography>\n      <Typography variant='subtitle1'>\n        好人:\n        {' '}\n        {numberOfGood}\n        {' '}\n        個\n      </Typography>\n      <Typography variant='subtitle1'>\n        壞人:\n        {' '}\n        {numberOfEvil}\n        {' '}\n        個\n      </Typography>\n    </Box>\n  );\n};\n\ninterface GenerateQuestScriptParams extends QuestCharacterSetting{\n\n}\n\nconst generateQuestScript = ({\n  isClericPresent,\n  isMutineerPresent,\n  isBlindHunterPresent,\n  isChangelingPresent,\n  isArthurPresent,\n  isMorganLeFayPresent,\n  isScionPresent,\n}: GenerateQuestScriptParams): string[] => {\n  let s0: string;\n  // let countUnknowEvil = (+isChangelingPresent as number) + (+isBlindHunterPresent as number) + (+isScionPresent as number) + (+isMutineerPresent as number);\n  let s_unknownEvils = [isChangelingPresent ? 'Changeling' : '', isBlindHunterPresent ? 'BlindHunter' : '', isScionPresent ? 'Scion' : '', isMutineerPresent ? 'Mutineer' : ''];\n  s_unknownEvils = s_unknownEvils.filter((s) => s !== '');\n  if (s_unknownEvils.length > 1){\n    s0 = s_unknownEvils.join(',')\n      .replace(/,(?=[^,]*$)/, ' 同');\n    s0 = `除 ${s0} 以外，所有壞人擘大眼`;\n  } else if (s_unknownEvils.length == 1){\n    s0 = `除 ${s_unknownEvils} 以外，所有壞人擘大眼`;\n  }else{\n    s0 = '所有壞人擘大眼';\n  }\n\n  const s2 = `所有壞人合埋眼。${isMorganLeFayPresent && isScionPresent ? 'Scion 豎起手指公。Morgan Le Fay擘大眼' : ''}`;\n  const s3 = `${isMorganLeFayPresent && isScionPresent ? 'Scion 收起手指公。Morgan Le Fay 合埋眼' : ''}`;\n  const s4 = `${isMorganLeFayPresent && isArthurPresent ? 'Morgan Le Fay 豎起手指公。Arthur 擘大眼' : ''}`;\n  const s5 = `${isMorganLeFayPresent && isArthurPresent ? 'Morgan Le Fay 收起手指公。Arthur 合埋眼' : ''}`;\n  const s6 = `${isClericPresent ? 'First leader 如果係壞人就豎起手指公。Cleric 擘大眼' : ''}`;\n  const s7 = `${isClericPresent ? 'First leader 收起手指公。Cleric 合埋眼' : ''}`;\n  const s8 = '所有人擘大眼';\n\n  return [s0, s2, s3, s4, s5, s6, s7, s8].filter((s) => !!s);\n};\n\ninterface GenerateAvalonScriptParams extends AvalonCharacterSetting{\n  numberOfEvil: number,\n  useLancelotAlternativeRules: boolean,\n  isNewbieMode: boolean,\n}\n\nconst generateAvalonScript = ({\n  useLancelotAlternativeRules,\n  isLancelotPresent,\n  isMordredPresent,\n  isMorganaPresent,\n  isOberonPresent,\n  isPercivalPresent,\n  isNewbieMode,\n  numberOfEvil,\n}: GenerateAvalonScriptParams): string[] => {\n  let numEvilOpenEyes = numberOfEvil;\n  // isMordredPresent && numOtherEvil--;\n  isOberonPresent && numEvilOpenEyes--;\n  // isMorganaPresent && numOtherEvil--;\n  isLancelotPresent && numEvilOpenEyes--;\n\n  // const script1 = '';\n  // let scriptEvil = '所有人合埋眼，伸手握拳放係枱上，所有壞人開眼';\n  const scriptAlternativeRule = useLancelotAlternativeRules ? '兩個蘭斯洛特開眼確認身份' : '';\n  const scriptAlternativeRule2 = useLancelotAlternativeRules ? '兩個蘭斯洛特合埋眼' : '';\n  let scriptEvil = '所有壞人擘大眼';\n  if (isLancelotPresent && isOberonPresent){\n    scriptEvil = `除【奧柏倫同壞蘭斯洛特】以外，${scriptEvil}，壞蘭斯洛特豎起手指公`;\n  } else if (isOberonPresent){\n    scriptEvil = `除左【奧柏倫】以外，${scriptEvil}`;\n  } else if (isLancelotPresent) scriptEvil = `除左【壞蘭斯洛特】以外，${scriptEvil}，壞蘭斯洛特豎起手指公`;\n  if (isNewbieMode) scriptEvil += `，總共有${numEvilOpenEyes}個壞人開眼`;\n\n  const scriptEvil2 = '所有壞人合埋眼';\n  const scriptEvil3 = `${isMordredPresent ? '除左【莫德雷德】以外，' : ''}壞人豎起手指公。梅林擘大眼${isNewbieMode ? `，總共有${numberOfEvil}隻手指公` : ''}`;\n  // const numOfEvilShown = numberOfEvil - (+isMordredPresent);\n  // const scriptGood = '';\n  // ，`總共有 ${numOfEvilShown} 個壞人，如果數目有錯，請出聲。`;\n  const scriptGood2 = '梅林合埋眼，壞人收起手指公';\n  const scriptGood3 = isPercivalPresent ? `【梅林】${isMorganaPresent ? '及【莫甘娜】' : ''} 豎起手指公，【派西維爾】擘大眼。` : '';\n  const scriptGood4 = isPercivalPresent ? `【梅林】${isMorganaPresent ? '及【莫甘娜】' : ''} 收起手指公，【派西維爾】合埋眼。` : '';\n  const scriptGood5 = '所有人擘大眼';\n  return [\n    scriptAlternativeRule, scriptAlternativeRule2,\n    scriptEvil, scriptEvil2, scriptEvil3,\n    scriptGood2, scriptGood3, scriptGood4, scriptGood5,\n  ].filter((s) => !!s);\n};\n\nconst addLineBreaksToScript = (script: string[]): (string | JSX.Element)[] => (script).map(\n  // eslint-disable-next-line react/jsx-key\n  (x) => [x, <br />],\n)\n  .reduce(\n    (ac, curr) => (ac.concat(curr)), [],\n  );\n\nconst PlayButton = (props: { playOnClick: EventHandler<any> }) => {\n  const { playOnClick } = props;\n  return (\n    <div onClick={playOnClick} role='button' tabIndex={0} onKeyDown={playOnClick}>\n      <Fab variant='extended' color='primary'>\n        <PlayArrowIcon />\n        {' '}\n        Click to Play Script\n      </Fab>\n    </div>\n  );\n};\n\nconst StopButton = (props: { stopPlaying: EventHandler<any> }) => {\n  const { stopPlaying } = props;\n  return (\n    <div onClick={stopPlaying} role='button' tabIndex={0} onKeyDown={stopPlaying}>\n      <Fab variant='extended' color='secondary'>\n        <StopIcon />\n      </Fab>\n    </div>\n  );\n};\n\nconst useMCPageHook = () => {\n  // const synthesize = useSynthesize();\n\n  const { allSetting } = useContext(SettingContext);\n  const [scriptArr, setScriptText] = useState<string[]>([]);\n  const [scriptDisplay, setScriptDisplay] = useState<(string | JSX.Element)[]>([]);\n  const [areVoicesLoaded, setAreVoicesLoad] = useState(false);\n  const { numberOfEvil } = calcGoodEvilNumber(\n    allSetting.totalNumberOfPlayer,\n  );\n  useEffect(() => {\n    const s = allSetting.gameMode === GameMode.Avalon\n      ? generateAvalonScript({\n        ...allSetting,\n        numberOfEvil,\n      })\n      : generateQuestScript({\n        ...allSetting,\n      });\n    const t = addLineBreaksToScript(s);\n    setScriptText(s);\n    setScriptDisplay(t);\n  }, [allSetting]);\n\n  useEffect(() => {\n    const synth = window.speechSynthesis;\n    synth.getVoices();\n    synth.onvoiceschanged = () => {\n      const voices = synth.getVoices();\n      if (voices.length > 0){\n        setAreVoicesLoad(true);\n      }\n    };\n  }, []);\n  const playScript = useCallback(() => {\n    endSpeaking();\n    scriptArr.forEach((s) => {\n      speak('三，二，一．', allSetting.countingRate);\n      speak(s, allSetting.speakingRate);\n    });\n  }, [scriptArr]);\n  return {\n    scriptArr,\n    allSetting,\n    playScript,\n    scriptDisplay,\n    areVoicesLoaded,\n  };\n};\n\nexport const MCPage = () => {\n  const classes = useStyles();\n  const {\n    scriptDisplay,\n    allSetting,\n    playScript,\n    areVoicesLoaded,\n  } = useMCPageHook();\n  return (\n    <Card variant='outlined' className={classes.mcCard}>\n      <CurrentSettingDisplay gameSetting={allSetting} />\n      <Typography>\n        {scriptDisplay}\n      </Typography>\n      <div className={classes.playBtnWrap}>\n        {areVoicesLoaded ? <PlayButton playOnClick={playScript} /> : <CircularProgress />}\n      </div>\n      <div className={classes.playBtnWrap}>\n        <StopButton stopPlaying={endSpeaking} />\n      </div>\n    </Card>\n  );\n};\n","import React, {\n  useCallback, useContext, useMemo, useState,\n} from 'react';\nimport {\n  createMuiTheme, Dialog, Fab, makeStyles, MuiThemeProvider,\n} from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport BrightnessMediumIcon from '@material-ui/icons/BrightnessMedium';\nimport { SettingTab } from './SettingTab';\nimport { SettingContext } from '../state/playerSetting';\nimport { MCPage } from './MC';\nimport { Constants } from '../Constant';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100vw',\n    height: '100vh',\n    position: 'relative',\n    boxSizing: 'border-box',\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n  },\n  fabLeft: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    left: theme.spacing(3),\n  },\n}));\n\nexport const Main = () => {\n  const classes = useStyles();\n  const { allSetting, editSetting } = useContext(SettingContext);\n  const toggleDarkMode = useCallback(() => {\n    const { isDarkMode } = allSetting;\n    editSetting('isDarkMode', !isDarkMode);\n  }, [allSetting.isDarkMode, editSetting]);\n\n  const appliedTheme = useMemo(\n    () => createMuiTheme(allSetting.isDarkMode ? Constants.theme.dark : Constants.theme.light),\n    [allSetting],\n  );\n\n  const [isDialogOpen, setIsDialogOpen] = useState<boolean>(true);\n  const btnOnClick = () => {\n    setIsDialogOpen(true);\n  };\n  const closeDialog = () => {\n    setIsDialogOpen(false);\n  };\n\n  return (\n    <MuiThemeProvider theme={appliedTheme}>\n      <div className={classes.root}>\n        <MCPage />\n        <Dialog open={isDialogOpen} onClose={closeDialog} fullWidth>\n          <SettingTab closeDialog={closeDialog} />\n        </Dialog>\n        <Fab color=\"secondary\" aria-label=\"edit\" onClick={btnOnClick} className={classes.fab}>\n          <SettingsIcon />\n        </Fab>\n        <Fab color=\"secondary\" aria-label=\"toggle dark mode\" onClick={toggleDarkMode} className={classes.fabLeft}>\n          <BrightnessMediumIcon />\n        </Fab>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Main } from './views/Main';\nimport { SettingContextProvider } from './state/playerSetting';\n\nfunction App(){\n  return (\n    <SettingContextProvider>\n      <Main />\n    </SettingContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config){\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator){\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin){\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost){\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config){\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null){\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed'){\n            if (navigator.serviceWorker.controller){\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate){\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess){\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config){\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ){\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister(){\n  if ('serviceWorker' in navigator){\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function){\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\ndocument.documentElement.lang = 'zh-HK';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}