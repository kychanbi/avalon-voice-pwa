{"version":3,"sources":["Constant.tsx","state/playerSetting.tsx","views/components/TabPanel.tsx","views/SettingTab.tsx","utils/utils.ts","views/MC.tsx","views/Main.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Constants","totalNumberOfPlayers","good","evil","label","isPercivalPresent","isMordredPresent","isMorganaPresent","isOberonPresent","isLancelotPresent","isClericPresent","isBlindHunterPresent","isMutineerPresent","isArthurPresent","isChangelingPresent","isScionPresent","isMorganLeFayPresent","isNewbieMode","useLancelotAlternativeRules","langs","presets","totalNumberOfPlayer","desc","theme","light","palette","type","dark","Object","freeze","GameMode","defaultAllSetting","avalonCharacterSetting","speakingRate","countingRate","isDarkMode","gameMode","Avalon","questCharacterSetting","calcGoodEvilNumber","total","numberOfGood","numberOfEvil","SettingContext","React","createContext","allSetting","editSetting","editAllCharacterSettings","SettingContextProvider","children","useState","setAllSetting","Provider","value","name","includes","split","subSetting","settingType","tempSetting","TabPanel","currentTab","role","hidden","id","Box","sx","p","useStyle","makeStyles","settingTab","backgroundColor","background","paper","width","height","padding","minWidth","selectFormControl","margin","spacing","sliderWrap","maxWidth","closeBtn","position","top","right","cursor","zIndex","presetBtn","labels","SettingTab","closeDialog","classes","useContext","formState","setFormState","handleChange","event","target","checked","newVal","undefined","handleSliderChange","Array","isArray","className","Fab","onClick","Tabs","onChange","Tab","Quest","ButtonGroup","color","keys","map","key","Button","setting","handlePresetClick","FormControl","InputLabel","Select","labelId","n","MenuItem","FormGroup","FormControlLabel","control","Checkbox","Typography","gutterBottom","Slider","defaultValue","valueLabelDisplay","min","max","step","findVoiceByLang","voices","window","speechSynthesis","getVoices","foundVoiceArr","filter","v","lang","found","console","debug","speak","text","rate","synth","utterance","SpeechSynthesisUtterance","voice","log","endSpeaking","cancel","checkIfIos","test","navigator","userAgentData","platform","getDevicePlatform","useStyles","mcCard","playBtnWrap","textAlign","CurrentSettingDisplay","gameSetting","variant","PlayButton","props","playOnClick","tabIndex","onKeyDown","StopButton","stopPlaying","useMCPageHook","scriptArr","setScriptText","scriptDisplay","setScriptDisplay","areVoicesLoaded","setAreVoicesLoad","useEffect","s","numEvilOpenEyes","scriptAlternativeRule","scriptAlternativeRule2","scriptEvil","generateAvalonScript","s0","s_unknownEvils","length","join","replace","generateQuestScript","t","x","reduce","ac","curr","concat","checkIfVoiceLoaded","useCallback","onvoiceschanged","playScript","forEach","MCPage","Card","CircularProgress","root","boxSizing","fab","bottom","fabLeft","left","Main","toggleDarkMode","appliedTheme","useMemo","createMuiTheme","isDialogOpen","setIsDialogOpen","Dialog","open","onClose","fullWidth","App","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","document","documentElement","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5ef7dad1.chunk.js","sourcesContent":["import { PresetSetting } from './state/playerSetting';\nimport { ThemeOptions } from '@material-ui/core';\n\ninterface NumberOfPlayers {\n  good: number,\n  evil: number\n}\n\ninterface ConstantsInterface {\n  totalNumberOfPlayers:\n    Record<string, NumberOfPlayers>,\n  label:\n    Record<string, string>,\n  langs:string[],\n  presets: { [key: string]: PresetSetting; },\n  theme: {\n    light: ThemeOptions,\n    dark: ThemeOptions\n  }\n}\n\nconst Constants: ConstantsInterface = {\n  totalNumberOfPlayers: {\n    5: {\n      good: 3,\n      evil: 2,\n    },\n    6: {\n      good: 4,\n      evil: 2,\n    },\n    7: {\n      good: 4,\n      evil: 3,\n    },\n    8: {\n      good: 5,\n      evil: 3,\n    },\n    9: {\n      good: 6,\n      evil: 3,\n    },\n    10: {\n      good: 6,\n      evil: 4,\n    },\n  },\n  label: {\n    isPercivalPresent: '派西維爾',\n    isMordredPresent: '莫德雷德',\n    isMorganaPresent: '莫甘娜',\n    isOberonPresent: '奧柏倫',\n    isLancelotPresent: '蘭斯洛特',\n    isClericPresent: 'Cleric',\n    isBlindHunterPresent: 'BlindHunter',\n    isMutineerPresent: 'Mutineer',\n    isArthurPresent: 'Arthur',\n    isChangelingPresent: 'Changeling',\n    isScionPresent: 'Scion',\n    isMorganLeFayPresent: 'Morgan Le Fay',\n    isNewbieMode: '新手模式',\n    useLancelotAlternativeRules: '使用蘭斯洛特相認規則',\n\n  },\n  langs: ['zh-HK', 'yue_HK_#Hant'],\n  presets: {\n    'preset-6': {\n      totalNumberOfPlayer: '6',\n      isPercivalPresent: false,\n      isMordredPresent: false,\n      isMorganaPresent: false,\n      isOberonPresent: false,\n      isLancelotPresent: true,\n      useLancelotAlternativeRules: false,\n      desc: '經典六人',\n    },\n    'preset-7': {\n      totalNumberOfPlayer: '7',\n      isPercivalPresent: false,\n      isMordredPresent: false,\n      isMorganaPresent: false,\n      isOberonPresent: true,\n      isLancelotPresent: true,\n      useLancelotAlternativeRules: false,\n      desc: '經典七人',\n    },\n    'preset-8': {\n      totalNumberOfPlayer: '8',\n      isPercivalPresent: true,\n      isMordredPresent: true,\n      isMorganaPresent: true,\n      isOberonPresent: false,\n      isLancelotPresent: true,\n      useLancelotAlternativeRules: false,\n      desc: '經典八人',\n    },\n  },\n  theme: {\n    light: {\n      palette: {\n        type: 'light',\n      },\n    },\n    dark: {\n      palette: {\n        type: 'dark',\n        // primary: {\n        //   // Purple and green play nicely together.\n        //   main: purple[500],\n        // },\n      },\n    },\n  },\n};\nObject.freeze(Constants);\n\nexport { Constants };\n","import React, { useState } from 'react';\nimport { Constants } from '../Constant';\n\nexport interface AvalonCharacterSetting{\n  totalNumberOfPlayer: string,\n  isPercivalPresent: boolean,\n  isMordredPresent: boolean,\n  isMorganaPresent: boolean,\n  isOberonPresent: boolean,\n  isLancelotPresent: boolean,\n  useLancelotAlternativeRules: boolean,\n}\n\nexport interface QuestCharacterSetting{\n  isClericPresent: boolean,\n  isArthurPresent: boolean,\n  isBlindHunterPresent: boolean,\n  isMutineerPresent: boolean,\n  isChangelingPresent: boolean,\n  isScionPresent: boolean,\n  isMorganLeFayPresent: boolean,\n  isLancelotPresent: boolean,\n}\n\nexport enum GameMode{\n  Avalon = 'avalon',\n  Quest = 'quest',\n}\n\nexport interface AllSetting extends VoiceSetting{\n  avalonCharacterSetting: AvalonCharacterSetting,\n  questCharacterSetting: QuestCharacterSetting,\n  isDarkMode: boolean,\n  isNewbieMode: boolean,\n  gameMode: GameMode\n}\n\nexport interface VoiceSetting{\n  speakingRate: number,\n  countingRate: number,\n}\n\nexport interface PresetSetting extends AvalonCharacterSetting{\n  desc: string;\n}\n\n// export interface SettingFormState extends VoiceSetting, CharacterSetting {\n//   isDarkMode: boolean,\n//   isNewbieMode: boolean,\n// }\n\n// export const defaultFormSettingState: AllSetting = {\n\n// };\n\nexport const defaultAllSetting: AllSetting = {\n  avalonCharacterSetting: {\n    totalNumberOfPlayer: '5',\n    isPercivalPresent: false,\n    isMordredPresent: false,\n    isMorganaPresent: false,\n    isOberonPresent: false,\n    isLancelotPresent: false,\n    useLancelotAlternativeRules: false,\n  },\n  speakingRate: 0.8,\n  countingRate: 0.9,\n  isDarkMode: false,\n  isNewbieMode: false,\n  gameMode: GameMode.Avalon,\n  questCharacterSetting: {\n    isBlindHunterPresent: true,\n    isClericPresent: true,\n    isMutineerPresent: false,\n    isArthurPresent: false,\n    isChangelingPresent: false,\n    isMorganLeFayPresent: true,\n    isScionPresent: false,\n    isLancelotPresent: false,\n  },\n};\n\ninterface GoodEvilNumber{\n  numberOfGood: number,\n  numberOfEvil: number\n}\n\nexport function calcGoodEvilNumber(total: string): GoodEvilNumber{\n  return {\n    numberOfGood: Constants.totalNumberOfPlayers[total].good,\n    numberOfEvil: Constants.totalNumberOfPlayers[total].evil,\n  } as GoodEvilNumber;\n}\n\ninterface SettingContextType{\n  allSetting: AllSetting,\n  editSetting: Function,\n  editAllCharacterSettings: Function\n}\n\nexport const SettingContext = React.createContext<SettingContextType>({\n  allSetting: defaultAllSetting,\n  editSetting: () => {\n  },\n  editAllCharacterSettings: () => {\n  },\n});\n\ninterface SettingContextProviderProp{\n  children: React.ReactNode;\n}\n\nexport const SettingContextProvider = ({ children }: SettingContextProviderProp) => {\n  const [allSetting, setAllSetting] = useState<AllSetting>(\n    defaultAllSetting,\n  );\n  const editAllCharacterSettings = (value: AvalonCharacterSetting) => {\n    let tempSetting = allSetting.avalonCharacterSetting;\n    tempSetting = { ...tempSetting, ...value };\n    setAllSetting({\n      ...allSetting,\n      avalonCharacterSetting: tempSetting,\n    });\n  };\n  const editSetting = (name: string, value: any) => {\n    if (name.includes('.')){\n      const [subSetting, settingType] = name.split('.');\n      let tempSetting = allSetting[subSetting as 'avalonCharacterSetting' | 'questCharacterSetting'];\n      tempSetting = {\n        ...tempSetting,\n        [settingType]: value,\n      };\n      setAllSetting({\n        ...allSetting,\n        [subSetting]: tempSetting,\n      });\n    } else{\n      const tempSetting = {\n        ...allSetting,\n        [name]: value,\n      };\n      setAllSetting(tempSetting);\n    }\n  };\n  return (\n    <SettingContext.Provider value={{\n      allSetting,\n      editSetting,\n      editAllCharacterSettings,\n    }}\n    >\n      {children}\n    </SettingContext.Provider>\n  );\n};\n","import React from 'react';\nimport { Box } from '@material-ui/core';\n\ninterface TabPanelProps{\n  children: React.ReactNode,\n  value: string,\n  currentTab: string,\n}\n\nexport const TabPanel = ({\n  children,\n  value,\n  currentTab,\n}: TabPanelProps) => (\n  <div\n    role='tabpanel'\n    hidden={value !== currentTab}\n    id={`simple-tabpanel-${value}`}\n    aria-labelledby={`simple-tab-${value}`}\n  >\n    {value === currentTab && (\n      <Box sx={{ p: 0 }}>\n        {children}\n      </Box>\n    )}\n  </div>\n);\n","import React, { EventHandler, useContext, useState } from 'react';\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles,\n  FormControl, FormControlLabel, Checkbox, FormGroup, Slider, Typography, Fab,\n  Button, ButtonGroup, Tabs, Tab,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  AllSetting,\n  defaultAllSetting, GameMode, SettingContext,\n} from '../state/playerSetting';\nimport { Constants } from '../Constant';\nimport { TabPanel } from './components/TabPanel';\n\nconst useStyle = makeStyles((theme) => ({\n  settingTab: {\n    backgroundColor: theme.palette.background.paper,\n    width: '70%',\n    height: '80%',\n    padding: '3em 1.5em 5em',\n    minWidth: 320,\n  },\n  selectFormControl: {\n    margin: `${theme.spacing(1)}px 0`,\n    minWidth: '10em',\n  },\n  sliderWrap: {\n    maxWidth: '55vw',\n  },\n  closeBtn: {\n    position: 'absolute',\n    top: theme.spacing(3),\n    right: theme.spacing(3),\n    cursor: 'pointer',\n    zIndex: 10,\n  },\n  presetBtn: {\n    margin: `${theme.spacing(2)}px 0`,\n  },\n}));\n\nconst labels = Constants.label;\n\nconst SettingTab = ({ closeDialog }: { closeDialog: EventHandler<any> }) => {\n  const classes = useStyle();\n  const { allSetting, editSetting, editAllCharacterSettings } = useContext(SettingContext);\n  const { avalonCharacterSetting, questCharacterSetting } = allSetting;\n  const [formState, setFormState] = useState<AllSetting>(\n    allSetting ?? defaultAllSetting,\n  );\n  const handleSwitchTab = (event: React.ChangeEvent<{}>, value: GameMode) => {\n    setFormState({ ...formState, gameMode: value });\n    editSetting('gameMode', value);\n  };\n  const handleChange = <K extends keyof AllSetting>(\n    event: React.ChangeEvent<{ name?: string | undefined, value: unknown, checked?: boolean }>,\n  ) => {\n    const name = event.target.name as K;\n    const value = event.target.value as AllSetting[K];\n    const checked = event.target.checked as boolean;\n    const newVal = checked === undefined ? value : checked;\n\n\n      setFormState({ ...formState, [name]: newVal });\n      editSetting(name, newVal);\n  };\n  const handleSliderChange = (name: string) => (\n    event: React.ChangeEvent<{}>,\n    value: number | number[],\n  ) => {\n    if (Array.isArray(value)) return;\n    setFormState({ ...formState, [name]: value });\n    editSetting(name, value);\n  };\n\n  const handlePresetClick = (id: string) => {\n    const setting = Constants.presets[id];\n    setFormState({ ...formState, ...setting });\n    editAllCharacterSettings(setting);\n  };\n\n  return (\n    <div className={classes.settingTab}>\n      <Fab className={classes.closeBtn} onClick={closeDialog}>\n        <CloseIcon />\n      </Fab>\n      <Tabs value={formState.gameMode} onChange={handleSwitchTab} aria-label='tab'>\n        <Tab label='Avalon' value={GameMode.Avalon} />\n        <Tab label='Quest' value={GameMode.Quest} />\n      </Tabs>\n      <TabPanel value={GameMode.Avalon} currentTab={formState.gameMode}>\n        <ButtonGroup className={classes.presetBtn} color='default'>\n          {Object.keys(Constants.presets).map((key) => (\n            <Button key={key} id={key} onClick={(() => handlePresetClick(key))}>\n              {' '}\n              {Constants.presets[key].desc}\n            </Button>\n          ))}\n        </ButtonGroup>\n        <FormControl className={classes.selectFormControl}>\n          <InputLabel>總人數</InputLabel>\n          <Select\n            labelId='select-total-number-of-player-label'\n            id='select-total-number-of-player'\n            value={avalonCharacterSetting.totalNumberOfPlayer}\n            onChange={handleChange}\n            name='avalonCharacterSetting.totalNumberOfPlayer'\n          >\n            {Object.keys(\n              Constants.totalNumberOfPlayers,\n            ).map(\n              (n) => <MenuItem value={n} key={n}>{n}</MenuItem>,\n            )}\n          </Select>\n        </FormControl>\n        <FormGroup>\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={avalonCharacterSetting.isPercivalPresent}\n                onChange={handleChange}\n                name='avalonCharacterSetting.isPercivalPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isPercivalPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={avalonCharacterSetting.isMordredPresent}\n                onChange={handleChange}\n                name='avalonCharacterSetting.isMordredPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isMordredPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={avalonCharacterSetting.isMorganaPresent}\n                onChange={handleChange}\n                name='avalonCharacterSetting.isMorganaPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isMorganaPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={avalonCharacterSetting.isOberonPresent}\n                onChange={handleChange}\n                name='avalonCharacterSetting.isOberonPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isOberonPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={avalonCharacterSetting.isLancelotPresent}\n                onChange={handleChange}\n                name='avalonCharacterSetting.isLancelotPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isLancelotPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={avalonCharacterSetting.useLancelotAlternativeRules}\n                onChange={handleChange}\n                name='avalonCharacterSetting.useLancelotAlternativeRules'\n                color='primary'\n              />\n            )}\n            label={labels.useLancelotAlternativeRules}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={formState.isNewbieMode}\n                onChange={handleChange}\n                name='isNewbieMode'\n                color='primary'\n              />\n            )}\n            label={labels.isNewbieMode}\n          />\n        </FormGroup>\n      </TabPanel>\n      <TabPanel value={GameMode.Quest} currentTab={formState.gameMode}>\n        <FormGroup>\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={questCharacterSetting.isClericPresent}\n                onChange={handleChange}\n                name='questCharacterSetting.isClericPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isClericPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={questCharacterSetting.isArthurPresent}\n                onChange={handleChange}\n                name='questCharacterSetting.isArthurPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isArthurPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={questCharacterSetting.isBlindHunterPresent}\n                onChange={handleChange}\n                name='questCharacterSetting.isBlindHunterPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isBlindHunterPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={questCharacterSetting.isMorganLeFayPresent}\n                onChange={handleChange}\n                name='questCharacterSetting.isMorganLeFayPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isMorganLeFayPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={questCharacterSetting.isMutineerPresent}\n                onChange={handleChange}\n                name='questCharacterSetting.isMutineerPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isMutineerPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={questCharacterSetting.isChangelingPresent}\n                onChange={handleChange}\n                name='questCharacterSetting.isChangelingPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isChangelingPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={questCharacterSetting.isScionPresent}\n                onChange={handleChange}\n                name='questCharacterSetting.isScionPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isScionPresent}\n          />\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={questCharacterSetting.isLancelotPresent}\n                onChange={handleChange}\n                name='questCharacterSetting.isLancelotPresent'\n                color='primary'\n              />\n            )}\n            label={labels.isLancelotPresent}\n          />\n        </FormGroup>\n      </TabPanel>\n      <div className={classes.sliderWrap}>\n        <Typography gutterBottom>\n          speaking speed :\n          {' '}\n          {formState.speakingRate}\n        </Typography>\n        <Slider\n          name='speakingRate'\n          defaultValue={formState.speakingRate}\n          value={formState.speakingRate}\n          onChange={handleSliderChange('speakingRate')}\n          valueLabelDisplay='auto'\n          min={0.5}\n          max={1.5}\n          step={0.05}\n        />\n      </div>\n      <div className={classes.sliderWrap}>\n        <Typography gutterBottom>\n          counting speed :\n          {' '}\n          {formState.countingRate}\n        </Typography>\n        <Slider\n          name='countingRate'\n          defaultValue={formState.countingRate}\n          value={formState.countingRate}\n          onChange={handleSliderChange('countingRate')}\n          valueLabelDisplay='auto'\n          min={0.6}\n          max={1.6}\n          step={0.06}\n        />\n      </div>\n    </div>\n  );\n};\nexport { SettingTab };\n","import { Constants } from '../Constant';\n\nexport function findVoiceByLang(langs: string[]): (SpeechSynthesisVoice | undefined){\n  const synth = window.speechSynthesis;\n  const voices: SpeechSynthesisVoice[] = synth.getVoices();\n  const foundVoiceArr = voices.filter((v) => langs.includes(v.lang));\n  const [found] = foundVoiceArr;\n  console.debug(voices);\n  console.debug(langs);\n  console.debug(found);\n  return found;\n  // synth.voice\n}\nexport async function sleep(ms: number){\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n// export function initVoice(){\n// setVoice(Constants.voice);\n// }\n\n\nexport function speak(text: string, rate = 1){\n  const synth = window.speechSynthesis;\n  const utterance = new SpeechSynthesisUtterance(text);\n  utterance.voice = findVoiceByLang(Constants.langs) as SpeechSynthesisVoice;\n  utterance.lang = utterance.voice?.lang;\n  utterance.rate = rate;\n  // synth.cancel();\n  synth.speak(utterance);\n  console.log(text);\n  // console.log(scriptArr);\n  console.log(utterance);\n  // synth.resume();\n  // synth.cancel();\n}\n\nexport async function pauseSpeaking(s: number){\n  const synth = window.speechSynthesis;\n  synth.pause();\n  await sleep(s * 1000);\n  synth.resume();\n}\n\nexport function endSpeaking(){\n  const synth = window.speechSynthesis;\n  synth.cancel();\n}\n\nexport function getDevicePlatform():string{\n  return navigator?.userAgentData?.platform || navigator?.platform || 'unknown';\n}\n\nexport function checkIfIos():boolean{\n  return /iPad|iPhone|iPod/.test(getDevicePlatform());\n}\n","import React, { EventHandler, useCallback, useContext, useEffect, useState } from 'react';\nimport { Box, Card, CircularProgress, Fab, makeStyles, Typography } from '@material-ui/core';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport {\n  AllSetting, AvalonCharacterSetting,\n  calcGoodEvilNumber,\n  defaultAllSetting,\n  GameMode, QuestCharacterSetting,\n  SettingContext,\n} from '../state/playerSetting';\nimport { checkIfIos, endSpeaking, speak } from '../utils/utils';\n\ninterface settingDisplayProps{\n  gameSetting: AllSetting;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  mcCard: {\n    padding: theme.spacing(2),\n    height: '100%',\n  },\n  playBtnWrap: {\n    width: '100%',\n    padding: '1em 0',\n    textAlign: 'center',\n  },\n}));\n\nconst CurrentSettingDisplay = ({ gameSetting }: settingDisplayProps) => {\n  const {\n    totalNumberOfPlayer,\n  } = gameSetting.avalonCharacterSetting;\n  const {\n    numberOfGood,\n    numberOfEvil,\n  } = calcGoodEvilNumber(\n    totalNumberOfPlayer ?? defaultAllSetting.avalonCharacterSetting.totalNumberOfPlayer,\n  );\n  return (\n    <Box>\n      <Typography variant='subtitle1'>\n        總人數:\n        {' '}\n        {totalNumberOfPlayer}\n      </Typography>\n      <Typography variant='subtitle1'>\n        好人:\n        {' '}\n        {numberOfGood}\n        {' '}\n        個\n      </Typography>\n      <Typography variant='subtitle1'>\n        壞人:\n        {' '}\n        {numberOfEvil}\n        {' '}\n        個\n      </Typography>\n    </Box>\n  );\n};\n\ninterface GenerateQuestScriptParams extends QuestCharacterSetting{\n\n}\n\nconst generateQuestScript = ({\n  isClericPresent,\n  isMutineerPresent,\n  isBlindHunterPresent,\n  isChangelingPresent,\n  isArthurPresent,\n  isMorganLeFayPresent,\n  isScionPresent,\n  isLancelotPresent,\n}: GenerateQuestScriptParams): string[] => {\n  let s0: string;\n  // let countUnknowEvil = (+isChangelingPresent as number) + (+isBlindHunterPresent as number) + (+isScionPresent as number) + (+isMutineerPresent as number);\n  let s_unknownEvils = [isChangelingPresent ? 'Changeling' : '', isBlindHunterPresent ? 'BlindHunter' : '', isScionPresent ? 'Scion' : '', isMutineerPresent ? 'Mutineer' : ''];\n  s_unknownEvils = s_unknownEvils.filter((s) => s !== '');\n  if (s_unknownEvils.length > 1){\n    s0 = s_unknownEvils.join(',')\n      .replace(/,(?=[^,]*$)/, ' 同');\n    s0 = `除 ${s0} 以外，所有壞人擘大眼`;\n  } else if (s_unknownEvils.length == 1){\n    s0 = `除 ${s_unknownEvils} 以外，所有壞人擘大眼`;\n  } else{\n    s0 = '所有壞人擘大眼';\n  }\n\n  const s2 = `所有壞人合埋眼。${isMorganLeFayPresent && isScionPresent ? 'Scion 豎起手指公。Morgan Le Fay擘大眼' : ''}`;\n  const s3 = `${isMorganLeFayPresent && isScionPresent ? 'Scion 收起手指公。Morgan Le Fay 合埋眼' : ''}`;\n  const s4 = `${isMorganLeFayPresent && isArthurPresent ? 'Morgan Le Fay 豎起手指公。Arthur 擘大眼' : ''}`;\n  const s5 = `${isMorganLeFayPresent && isArthurPresent ? 'Morgan Le Fay 收起手指公。Arthur 合埋眼' : ''}`;\n  const s6 = `${isClericPresent ? 'First leader 如果係壞人就豎起手指公。Cleric 擘大眼' : ''}`;\n  const s7 = `${isClericPresent ? 'First leader 收起手指公。Cleric 合埋眼' : ''}`;\n  const s8 = isLancelotPresent ? '兩個蘭斯洛特開眼確認身份' : '';\n  const s9 = isLancelotPresent ? '兩個蘭斯洛特合埋眼' : '';\n  const s99 = '所有人擘大眼';\n\n  return [s0, s2, s3, s4, s5, s6, s7, s8, s9, s99].filter((s) => !!s);\n};\n\ntype GenerateAvalonScriptParams = Omit<AvalonCharacterSetting, 'totalNumberOfPlayer'> & {\n  numberOfEvil: number,\n  useLancelotAlternativeRules: boolean,\n  isNewbieMode: boolean,\n}\n\nexport const generateAvalonScript = ({\n  useLancelotAlternativeRules,\n  isLancelotPresent,\n  isMordredPresent,\n  isMorganaPresent,\n  isOberonPresent,\n  isPercivalPresent,\n  isNewbieMode,\n  numberOfEvil,\n}: GenerateAvalonScriptParams): string[] => {\n  let numEvilOpenEyes = numberOfEvil;\n  // isMordredPresent && numOtherEvil--;\n  isOberonPresent && numEvilOpenEyes--;\n  // isMorganaPresent && numOtherEvil--;\n  isLancelotPresent && numEvilOpenEyes--;\n\n  // const script1 = '';\n  // let scriptEvil = '所有人合埋眼，伸手握拳放係枱上，所有壞人開眼';\n  const scriptAlternativeRule = useLancelotAlternativeRules ? '兩個蘭斯洛特開眼確認身份' : '';\n  const scriptAlternativeRule2 = useLancelotAlternativeRules ? '兩個蘭斯洛特合埋眼' : '';\n  let scriptEvil = '所有壞人擘大眼';\n  if (isLancelotPresent && isOberonPresent){\n    scriptEvil = `除【奧柏倫同壞蘭斯洛特】以外，${scriptEvil}，壞蘭斯洛特豎起手指公`;\n  } else if (isOberonPresent){\n    scriptEvil = `除左【奧柏倫】以外，${scriptEvil}`;\n  } else if (isLancelotPresent) scriptEvil = `除左【壞蘭斯洛特】以外，${scriptEvil}，壞蘭斯洛特豎起手指公`;\n  if (isNewbieMode) scriptEvil += `，總共有${numEvilOpenEyes}個壞人開眼`;\n\n  const scriptEvil2 = '所有壞人合埋眼';\n  const scriptEvil3 = `${isMordredPresent ? '除左【莫德雷德】以外，' : ''}壞人豎起手指公。梅林擘大眼${isNewbieMode ? `，總共有${numberOfEvil - (isMordredPresent as unknown as number)}隻手指公` : ''}`;\n  // const numOfEvilShown = numberOfEvil - (+isMordredPresent);\n  // const scriptGood = '';\n  // ，`總共有 ${numOfEvilShown} 個壞人，如果數目有錯，請出聲。`;\n  const scriptGood2 = '梅林合埋眼，壞人收起手指公';\n  const scriptGood3 = isPercivalPresent ? `【梅林】${isMorganaPresent ? '及【莫甘娜】' : ''} 豎起手指公，【派西維爾】擘大眼。` : '';\n  const scriptGood4 = isPercivalPresent ? `【梅林】${isMorganaPresent ? '及【莫甘娜】' : ''} 收起手指公，【派西維爾】合埋眼。` : '';\n  const scriptGood5 = '所有人擘大眼';\n  return [\n    scriptAlternativeRule, scriptAlternativeRule2,\n    scriptEvil, scriptEvil2, scriptEvil3,\n    scriptGood2, scriptGood3, scriptGood4, scriptGood5,\n  ].filter((s) => !!s);\n};\n\nconst addLineBreaksToScript = (script: string[]): (string | JSX.Element)[] => (script).map(\n  // eslint-disable-next-line react/jsx-key\n  (x) => [x, <br />],\n)\n  .reduce(\n    (ac, curr) => (ac.concat(curr)), [],\n  );\n\nconst PlayButton = (props: { playOnClick: EventHandler<any> }) => {\n  const { playOnClick } = props;\n  return (\n    <div onClick={playOnClick} role='button' tabIndex={0} onKeyDown={playOnClick}>\n      <Fab variant='extended' color='primary'>\n        <PlayArrowIcon />\n        {' '}\n        Click to Play Script\n      </Fab>\n    </div>\n  );\n};\n\nconst StopButton = (props: { stopPlaying: EventHandler<any> }) => {\n  const { stopPlaying } = props;\n  return (\n    <div onClick={stopPlaying} role='button' tabIndex={0} onKeyDown={stopPlaying}>\n      <Fab variant='extended' color='secondary'>\n        <StopIcon />\n      </Fab>\n    </div>\n  );\n};\n\nconst useMCPageHook = () => {\n  // const synthesize = useSynthesize();\n\n  const { allSetting } = useContext(SettingContext);\n  const {\n    questCharacterSetting,\n    avalonCharacterSetting,\n    isNewbieMode,\n  } = allSetting;\n  const [scriptArr, setScriptText] = useState<string[]>([]);\n  const [scriptDisplay, setScriptDisplay] = useState<(string | JSX.Element)[]>([]);\n  const [areVoicesLoaded, setAreVoicesLoad] = useState(false);\n  const { numberOfEvil } = calcGoodEvilNumber(\n    avalonCharacterSetting.totalNumberOfPlayer,\n  );\n  useEffect(() => {\n    const s = allSetting.gameMode === GameMode.Avalon\n      ? generateAvalonScript({\n        ...avalonCharacterSetting,\n        numberOfEvil,\n        isNewbieMode,\n      })\n      : generateQuestScript({\n        ...questCharacterSetting,\n      });\n    const t = addLineBreaksToScript(s);\n    setScriptText(s);\n    setScriptDisplay(t);\n  }, [allSetting]);\n\n  const checkIfVoiceLoaded = useCallback(() => {\n    const synth = window.speechSynthesis;\n    const voices = synth.getVoices();\n    if (voices.length > 0){\n      setAreVoicesLoad(true);\n    }\n  }, [setAreVoicesLoad]);\n\n  useEffect(() => {\n    if (checkIfIos()){\n      checkIfVoiceLoaded();\n    } else{\n      window.speechSynthesis.onvoiceschanged = checkIfVoiceLoaded;\n      checkIfVoiceLoaded();\n    }\n  }, []);\n  const playScript = useCallback(() => {\n    endSpeaking();\n    scriptArr.forEach((s) => {\n      speak('三，二，一．', allSetting.countingRate);\n      speak(s, allSetting.speakingRate);\n    });\n  }, [scriptArr]);\n  return {\n    scriptArr,\n    allSetting,\n    playScript,\n    scriptDisplay,\n    areVoicesLoaded,\n  };\n};\n\nexport const MCPage = () => {\n  const classes = useStyles();\n  const {\n    scriptDisplay,\n    allSetting,\n    playScript,\n    areVoicesLoaded,\n  } = useMCPageHook();\n  return (\n    <Card variant='outlined' className={classes.mcCard}>\n      <CurrentSettingDisplay gameSetting={allSetting} />\n      <Typography>\n        {scriptDisplay}\n      </Typography>\n      <div className={classes.playBtnWrap}>\n        {areVoicesLoaded ? <PlayButton playOnClick={playScript} /> : <CircularProgress />}\n      </div>\n      <div className={classes.playBtnWrap}>\n        <StopButton stopPlaying={endSpeaking} />\n      </div>\n    </Card>\n  );\n};\n","import React, {\n  useCallback, useContext, useMemo, useState,\n} from 'react';\nimport {\n  createMuiTheme, Dialog, Fab, makeStyles, MuiThemeProvider,\n} from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport BrightnessMediumIcon from '@material-ui/icons/BrightnessMedium';\nimport { SettingTab } from './SettingTab';\nimport { SettingContext } from '../state/playerSetting';\nimport { MCPage } from './MC';\nimport { Constants } from '../Constant';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100vw',\n    height: '100vh',\n    position: 'relative',\n    boxSizing: 'border-box',\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n  },\n  fabLeft: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    left: theme.spacing(3),\n  },\n}));\n\nexport const Main = () => {\n  const classes = useStyles();\n  const { allSetting, editSetting } = useContext(SettingContext);\n  const toggleDarkMode = useCallback(() => {\n    const { isDarkMode } = allSetting;\n    editSetting('isDarkMode', !isDarkMode);\n  }, [allSetting.isDarkMode, editSetting]);\n\n  const appliedTheme = useMemo(\n    () => createMuiTheme(allSetting.isDarkMode ? Constants.theme.dark : Constants.theme.light),\n    [allSetting],\n  );\n\n  const [isDialogOpen, setIsDialogOpen] = useState<boolean>(true);\n  const btnOnClick = () => {\n    setIsDialogOpen(true);\n  };\n  const closeDialog = () => {\n    setIsDialogOpen(false);\n  };\n\n  return (\n    <MuiThemeProvider theme={appliedTheme}>\n      <div className={classes.root}>\n        <MCPage />\n        <Dialog open={isDialogOpen} onClose={closeDialog} fullWidth>\n          <SettingTab closeDialog={closeDialog} />\n        </Dialog>\n        <Fab color=\"secondary\" aria-label=\"edit\" onClick={btnOnClick} className={classes.fab}>\n          <SettingsIcon />\n        </Fab>\n        <Fab color=\"secondary\" aria-label=\"toggle dark mode\" onClick={toggleDarkMode} className={classes.fabLeft}>\n          <BrightnessMediumIcon />\n        </Fab>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Main } from './views/Main';\nimport { SettingContextProvider } from './state/playerSetting';\n\nfunction App(){\n  return (\n    <SettingContextProvider>\n      <Main />\n    </SettingContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config){\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator){\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin){\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost){\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config){\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null){\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed'){\n            if (navigator.serviceWorker.controller){\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate){\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess){\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config){\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ){\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister(){\n  if ('serviceWorker' in navigator){\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function){\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\ndocument.documentElement.lang = 'zh-HK';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}