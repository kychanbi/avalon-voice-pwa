{"version":3,"sources":["Constant.tsx","state/playerSetting.tsx","views/SettingTab.tsx","utils/utils.ts","views/MC.tsx","views/Main.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Constants","totalNumberOfPlayers","5","good","evil","6","7","8","9","10","label","isPercivalPresent","isMordredPresent","isMorganaPresent","isOberonPresent","isLancelotPresent","voice","presets","totalNumberOfPlayer","desc","Object","freeze","SettingProps","defaultFormSettingState","speakingRate","countingRate","defaultAllSetting","numberOfGood","numberOfEvil","SettingContext","React","createContext","allSetting","editSetting","editAllCharacterSettings","SettingContextProvider","children","useState","currentSetting","setCurrentSetting","setAllSetting","useEffect","total","tempSetting","Provider","value","settingType","console","log","useStyle","makeStyles","theme","settingTab","backgroundColor","palette","background","paper","width","height","padding","minWidth","selectFormControl","margin","spacing","sliderWrap","maxWidth","closeBtn","position","top","right","cursor","presetBtn","marginRight","labels","SettingTab","closeDialog","classes","useContext","formState","setFormState","handleChange","event","name","target","checked","newVal","undefined","handleSliderChange","Array","isArray","className","Fab","onClick","keys","map","key","Button","variant","color","id","setting","handlePresetClick","FormControl","InputLabel","Select","labelId","onChange","n","MenuItem","FormGroup","FormControlLabel","control","Checkbox","Typography","gutterBottom","Slider","defaultValue","valueLabelDisplay","min","max","step","findVoice","voiceName","window","speechSynthesis","getVoices","find","v","lang","speak","text","rate","synth","utterance","SpeechSynthesisUtterance","endSpeaking","cancel","useStyles","mcCard","playBtnWrap","textAlign","CurrentSettingDisplay","gameSetting","Box","PlayButton","props","playOnClick","role","tabIndex","onKeyDown","StopButton","stopPlaying","useMCPageHook","scriptArr","setScriptText","scriptDisplay","setScriptDisplay","s","scriptEvil","filter","generateScript","t","x","reduce","ac","curr","concat","playScript","useCallback","forEach","MCPage","Card","root","boxSizing","fab","bottom","Main","isDialogOpen","setIsDialogOpen","Dialog","open","onClose","fullWidth","aria-label","App","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3a713ac5.chunk.js","sourcesContent":["import { PresetSetting } from \"./state/playerSetting\";\n\ninterface NumberOfPlayers {\n  good: number,\n  evil: number\n}\n\ninterface ConstantsInterface {\n  totalNumberOfPlayers:\n    Record<string, NumberOfPlayers>,\n  label:\n    Record<string, string>,\n  voice:string,\n  presets: { [key: string]: PresetSetting; }\n}\n\nconst Constants: ConstantsInterface = {\n  totalNumberOfPlayers: {\n    5: {\n      good: 3,\n      evil: 2,\n    },\n    6: {\n      good: 4,\n      evil: 2,\n    },\n    7: {\n      good: 4,\n      evil: 3,\n    },\n    8: {\n      good: 5,\n      evil: 3,\n    },\n    9: {\n      good: 6,\n      evil: 3,\n    },\n    10: {\n      good: 6,\n      evil: 4,\n    },\n  },\n  label: {\n    isPercivalPresent: '派西維爾',\n    isMordredPresent: '莫德雷德',\n    isMorganaPresent: '莫甘娜',\n    isOberonPresent: '奧柏倫',\n    isLancelotPresent: '蘭斯洛特',\n  },\n  voice: 'zh-HK',\n  presets: {\n    \"preset-6\": {\n      totalNumberOfPlayer: \"6\",\n      isPercivalPresent: false,\n      isMordredPresent: true,\n      isMorganaPresent: false,\n      isOberonPresent: false,\n      isLancelotPresent: true,\n      desc:\"經典六人\"\n    },\n    \"preset-7\": {\n      totalNumberOfPlayer: \"7\",\n      isPercivalPresent: false,\n      isMordredPresent: true,\n      isMorganaPresent: false,\n      isOberonPresent: false,\n      isLancelotPresent: true,\n      desc:\"經典七人\"\n    },\n    \"preset-8\": {\n      totalNumberOfPlayer: \"8\",\n      isPercivalPresent: true,\n      isMordredPresent: true,\n      isMorganaPresent: true,\n      isOberonPresent: false,\n      isLancelotPresent: true,\n      desc:\"經典八人\"\n    }\n  }\n};\nObject.freeze(Constants);\n\nexport { Constants };\n","import React, { useEffect, useState } from 'react';\nimport { Constants } from '../Constant';\n\nexport interface CharacterSetting {\n  totalNumberOfPlayer: string,\n  isPercivalPresent: boolean,\n  isMordredPresent: boolean,\n  isMorganaPresent: boolean,\n  isOberonPresent: boolean,\n  isLancelotPresent: boolean,\n}\n\nexport interface AllSetting extends CharacterSetting,VoiceSetting {\n  numberOfGood: number,\n  numberOfEvil: number,\n}\n\nexport interface VoiceSetting {\n  speakingRate: number,\n  countingRate: number,\n}\n\nexport interface PresetSetting extends CharacterSetting{\n  desc: string\n}\n\nexport interface SettingFormState extends VoiceSetting, CharacterSetting{}\n\nexport const defaultFormSettingState: SettingFormState = {\n  totalNumberOfPlayer: '5',\n  isPercivalPresent: false,\n  isMordredPresent: false,\n  isMorganaPresent: false,\n  isOberonPresent: false,\n  isLancelotPresent: false,\n  speakingRate: 0.8,\n  countingRate: 0.65,\n};\n\nconst defaultAllSetting: AllSetting = {\n  numberOfGood: 3,\n  numberOfEvil: 2,\n  ...defaultFormSettingState,\n};\n\nexport enum SettingProps {\n  totalNumberOfPlayer = 'totalNumberOfPlayer',\n  isPercivalPresent = 'isPercivalPresent',\n  isMordredPresent = 'isMordredPresent',\n  isMorganaPresent = 'isMorganaPresent',\n  isOberonPresent = 'isOberonPresent',\n  isLancelotPresent = 'isLancelotPresent',\n  // numberOfGood = 'numberOfGood',\n  // numberOfEvil = 'numberOfEvil',\n}\n\ninterface GoodEvilNumber {\n  numberOfGood: number,\n  numberOfEvil: number\n}\n\nfunction calcGoodEvilNumber(total: string): GoodEvilNumber {\n  return {\n    numberOfGood: Constants.totalNumberOfPlayers[total].good,\n    numberOfEvil: Constants.totalNumberOfPlayers[total].evil,\n  } as GoodEvilNumber;\n}\n\ninterface SettingContextType {\n  allSetting: AllSetting,\n  editSetting: Function,\n  editAllCharacterSettings: Function\n}\n\nexport const SettingContext = React.createContext<SettingContextType>({\n  allSetting: defaultAllSetting,\n  editSetting: () => {\n  },\n  editAllCharacterSettings: () => {\n  },\n});\n\ninterface SettingContextProviderProp {\n  children: React.ReactNode\n}\n\nexport const SettingContextProvider = ({ children }: SettingContextProviderProp) => {\n  const [currentSetting, setCurrentSetting] = useState<SettingFormState>(defaultFormSettingState);\n  const [allSetting, setAllSetting] = useState<AllSetting>(\n    defaultAllSetting,\n  );\n  const editAllCharacterSettings = (value: CharacterSetting) => {    \n    const tempSetting = { ...currentSetting, ...value };\n    setCurrentSetting(tempSetting);\n  };\n  const editSetting = (settingType: SettingProps, value: any) => {\n    console.log('editSetting', settingType, value);\n    const tempSetting = { ...currentSetting, [settingType]: value };\n    setCurrentSetting(tempSetting);\n  };\n  useEffect(() => {\n    const { numberOfGood, numberOfEvil } = calcGoodEvilNumber(\n      currentSetting.totalNumberOfPlayer ?? defaultFormSettingState.totalNumberOfPlayer,\n    );\n    const tempSetting: AllSetting = {\n      ...currentSetting, numberOfGood, numberOfEvil,\n    };\n    setAllSetting(tempSetting);\n  }, [currentSetting]);\n  return (\n    <SettingContext.Provider value={{ allSetting, editSetting, editAllCharacterSettings}}>\n      {children}\n    </SettingContext.Provider>\n  );\n};\n","import React, { EventHandler, useContext, useState } from 'react';\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles,\n  FormControl, FormControlLabel, Checkbox, FormGroup, Slider, Typography, Fab,\n  Button\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  defaultFormSettingState, SettingContext, SettingFormState,\n} from '../state/playerSetting';\nimport { Constants } from '../Constant';\n\nconst useStyle = makeStyles((theme) => ({\n  settingTab: {\n    backgroundColor: theme.palette.background.paper,\n    width: '70%',\n    height: '80%',\n    padding: '3em',\n    minWidth: 320,\n  },\n  selectFormControl: {\n    margin: `${theme.spacing(1)}px 0`,\n    minWidth: '10em',\n  },\n  sliderWrap: {\n    maxWidth: '55vw',\n  },\n  closeBtn: {\n    position: 'absolute',\n    top: theme.spacing(3),\n    right: theme.spacing(3),\n    cursor: 'pointer',\n  },\n  presetBtn: {\n    marginRight: theme.spacing(2),\n  }\n}));\n\nconst labels = Constants.label;\n\nconst SettingTab = ({ closeDialog }: { closeDialog: EventHandler<any> }) => {\n  const classes = useStyle();\n  const { allSetting, editSetting, editAllCharacterSettings } = useContext(SettingContext);\n  // const [currNumOfPlayers, setCurrNumOfPlayers] = useState<string>(\n  //   allSetting.totalNumberOfPlayer ?? defaultCharacterSetting.totalNumberOfPlayer,\n  // );\n  const [formState, setFormState] = useState<SettingFormState>(\n    allSetting ?? defaultFormSettingState,\n  );\n\n  const handleChange = <K extends keyof SettingFormState>(\n    event: React.ChangeEvent<{ name?: string | undefined, value: unknown, checked?: boolean }>,\n  ) => {\n    const name = event.target.name as K;\n    const value = event.target.value as SettingFormState[K];\n    const checked = event.target.checked as boolean;\n    const newVal = checked === undefined ? value : checked;\n    setFormState({ ...formState, [name]: newVal });\n    editSetting(name, newVal);\n  };\n  const handleSliderChange = (name: string) => (\n    event: React.ChangeEvent<{}>,\n    value: number | number[],\n  ) => {\n    // console.log(event)\n    // const name = event.target.name as string;\n    if (Array.isArray(value)) return;\n    setFormState({ ...formState, [name]: value });\n    editSetting(name, value);\n  };\n\n    const handlePresetClick = (id: string) => {\n    const setting =  Constants.presets[id];\n    setFormState({ ...formState, ...setting });\n    editAllCharacterSettings(setting);\n  }\n\n  return (\n    <div className={classes.settingTab}>\n      <Fab className={classes.closeBtn} onClick={closeDialog}>\n        <CloseIcon />\n      </Fab>\n\n      {\n        Object.keys(Constants.presets).map(key =>\n          <Button className={classes.presetBtn} variant=\"contained\" color=\"primary\" id={key} onClick={(event => handlePresetClick(key))}> {Constants.presets[key].desc}</Button>\n        )\n      }\n\n      <FormControl className={classes.selectFormControl}>\n        <InputLabel>Number of Player</InputLabel>\n        <Select\n          labelId=\"select-total-number-of-player-label\"\n          id=\"select-total-number-of-player\"\n          value={formState.totalNumberOfPlayer}\n          onChange={handleChange}\n          name=\"totalNumberOfPlayer\"\n        >\n          {Object.keys(\n            Constants.totalNumberOfPlayers,\n          ).map(\n            (n) => <MenuItem value={n} key={n}>{n}</MenuItem>,\n          )}\n        </Select>\n      </FormControl>\n      <FormGroup>\n        <FormControlLabel\n          control={(\n            <Checkbox\n              checked={formState.isPercivalPresent}\n              onChange={handleChange}\n              name=\"isPercivalPresent\"\n              color=\"primary\"\n            />\n          )}\n          label={labels.isPercivalPresent}\n        />\n        <FormControlLabel\n          control={(\n            <Checkbox\n              checked={formState.isMordredPresent}\n              onChange={handleChange}\n              name=\"isMordredPresent\"\n              color=\"primary\"\n            />\n          )}\n          label={labels.isMordredPresent}\n        />\n        <FormControlLabel\n          control={(\n            <Checkbox\n              checked={formState.isMorganaPresent}\n              onChange={handleChange}\n              name=\"isMorganaPresent\"\n              color=\"primary\"\n            />\n          )}\n          label={labels.isMorganaPresent}\n        />\n        <FormControlLabel\n          control={(\n            <Checkbox\n              checked={formState.isOberonPresent}\n              onChange={handleChange}\n              name=\"isOberonPresent\"\n              color=\"primary\"\n            />\n          )}\n          label={labels.isOberonPresent}\n        />\n        <FormControlLabel\n          control={(\n            <Checkbox\n              checked={formState.isLancelotPresent}\n              onChange={handleChange}\n              name=\"isLancelotPresent\"\n              color=\"primary\"\n            />\n          )}\n          label={labels.isLancelotPresent}\n        />\n        <div className={classes.sliderWrap}>\n          <Typography gutterBottom>\n            speaking speed :\n            {' '}\n            {formState.speakingRate}\n          </Typography>\n          <Slider\n            name=\"speakingRate\"\n            defaultValue={formState.speakingRate}\n            value={formState.speakingRate}\n            onChange={handleSliderChange('speakingRate')}\n            valueLabelDisplay=\"auto\"\n            min={0.5}\n            max={1.5}\n            step={0.05}\n          />\n        </div>\n        <div className={classes.sliderWrap}>\n          <Typography gutterBottom>\n            counting speed :\n            {' '}\n            {formState.countingRate}\n          </Typography>\n          <Slider\n            name=\"countingRate\"\n            defaultValue={formState.countingRate}\n            value={formState.countingRate}\n            onChange={handleSliderChange('countingRate')}\n            valueLabelDisplay=\"auto\"\n            min={0.6}\n            max={1.6}\n            step={0.06}\n          />\n        </div>\n      </FormGroup>\n    </div>\n  );\n};\nexport { SettingTab };\n","import { Constants } from '../Constant';\n\nexport function findVoice(voiceName: string): (SpeechSynthesisVoice | undefined){\n  const synth = window.speechSynthesis;\n  const voices: SpeechSynthesisVoice[] = synth.getVoices();\n  return voices.find((v) => v.lang === voiceName);\n  // synth.voice\n}\nexport async function sleep(ms: number){\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function initVoice(){\n  // setVoice(Constants.voice);\n}\n\nexport function speak(text: string, rate = 1){\n  const synth = window.speechSynthesis;\n  const utterance = new SpeechSynthesisUtterance(text);\n  utterance.voice = findVoice(Constants.voice) as SpeechSynthesisVoice;\n  utterance.rate = rate;\n  // synth.cancel();\n  synth.speak(utterance);\n  console.log(text);\n  // console.log(scriptArr);\n  console.log(utterance);\n  // synth.resume();\n  // synth.cancel();\n}\n\nexport async function pauseSpeaking(s: number){\n  const synth = window.speechSynthesis;\n  synth.pause();\n  await sleep(s * 1000);\n  synth.resume();\n}\n\nexport function endSpeaking(){\n  const synth = window.speechSynthesis;\n  synth.cancel();\n}\n","import React, {\n  EventHandler, useCallback, useContext, useEffect, useState,\n} from 'react';\nimport {\n  Box, Card, Fab, makeStyles, Typography,\n} from '@material-ui/core';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport { AllSetting, SettingContext } from '../state/playerSetting';\nimport {\n  endSpeaking, speak,\n} from '../utils/utils';\n\ninterface settingDisplayProps {\n  gameSetting: AllSetting\n}\n\nconst useStyles = makeStyles((theme) => ({\n  mcCard: {\n    padding: theme.spacing(2),\n  },\n  playBtnWrap: {\n    width: '100%',\n    padding: '1em 0',\n    textAlign: 'center',\n  },\n}));\n\nconst CurrentSettingDisplay = ({ gameSetting }: settingDisplayProps) => {\n  const {\n    numberOfGood, numberOfEvil, totalNumberOfPlayer,\n  } = gameSetting;\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">\n        Total number of players:\n        {' '}\n        {totalNumberOfPlayer}\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        Total number of Good players:\n        {' '}\n        {numberOfGood}\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        Total number of Evil players:\n        {' '}\n        {numberOfEvil}\n      </Typography>\n    </Box>\n  );\n};\nconst generateScript = ({\n  isLancelotPresent,\n  isMordredPresent,\n  isMorganaPresent,\n  isOberonPresent,\n  isPercivalPresent,\n}: AllSetting): string[] => {\n  // let numOtherEvil = numberOfEvil;\n  // isMordredPresent && numOtherEvil--;\n  // isOberonPresent && numOtherEvil--;\n  // isMorganaPresent && numOtherEvil--;\n  // isLancelotPresent && numOtherEvil--;\n\n  // const script1 = '';\n  // let scriptEvil = '所有人合埋眼，伸手握拳放係枱上，所有壞人開眼';\n  let scriptEvil = '所有壞人擘大眼';\n  if (isLancelotPresent && isOberonPresent) scriptEvil = `除【奧柏倫同蘭斯洛特】以外，${scriptEvil}，蘭斯洛特豎起手指公`;\n  else if (isOberonPresent) scriptEvil = `除左【奧柏倫】以外，${scriptEvil}`;\n  else if (isLancelotPresent) scriptEvil = `除左【蘭斯洛特】以外，${scriptEvil}，蘭斯洛特豎起手指公`;\n  const scriptEvil2 = '所有壞人合埋眼';\n  const scriptEvil3 = `${isMordredPresent ? '除左【莫德雷德】以外，' : ''}壞人豎起手指公。梅林擘大眼`;\n  // const numOfEvilShown = numberOfEvil - (+isMordredPresent);\n  // const scriptGood = '';\n  // ，`總共有 ${numOfEvilShown} 個壞人，如果數目有錯，請出聲。`;\n  const scriptGood2 = '梅林合埋眼，壞人收起手指公';\n  const scriptGood3 = isPercivalPresent ? `【梅林】${isMorganaPresent ? '及【莫甘娜】' : ''} 豎起手指公，【派西維爾】擘大眼。\n` : '';\n  const scriptGood4 = isPercivalPresent ? `【梅林】${isMorganaPresent ? '及【莫甘娜】' : ''} 收起手指公，【派西維爾】合埋眼。` : '';\n  const scriptGood5 = '所有人擘大眼';\n  return [\n    scriptEvil, scriptEvil2, scriptEvil3,\n    scriptGood2, scriptGood3, scriptGood4, scriptGood5,\n  ].filter((s) => !!s);\n};\n\nconst addLineBreaksToScript = (script: string[]): (string | JSX.Element)[] => (script).map(\n  // eslint-disable-next-line react/jsx-key\n  (x) => [x, <br />],\n).reduce(\n  (ac, curr) => (ac.concat(curr)), [],\n);\n\nconst PlayButton = (props: { playOnClick: EventHandler<any> }) => {\n  const { playOnClick } = props;\n  return (\n    <div onClick={playOnClick} role=\"button\" tabIndex={0} onKeyDown={playOnClick}>\n      <Fab variant=\"extended\" color=\"primary\">\n        <PlayArrowIcon />\n        {' '}\n        Click to Play Script\n      </Fab>\n    </div>\n  );\n};\n\nconst StopButton = (props: { stopPlaying: EventHandler<any> }) => {\n  const { stopPlaying } = props;\n  return (\n    <div onClick={stopPlaying} role=\"button\" tabIndex={0} onKeyDown={stopPlaying}>\n      <Fab variant=\"extended\" color=\"secondary\">\n        <StopIcon />\n      </Fab>\n    </div>\n  );\n};\n\nconst useMCPageHook = () => {\n  // const synthesize = useSynthesize();\n\n  const { allSetting } = useContext(SettingContext);\n  const [scriptArr, setScriptText] = useState<string[]>([]);\n  const [scriptDisplay, setScriptDisplay] = useState<(string | JSX.Element)[]>([]);\n  useEffect(() => {\n    const s = generateScript(allSetting);\n    const t = addLineBreaksToScript(s);\n    setScriptText(s);\n    setScriptDisplay(t);\n  }, [allSetting]);\n\n  const playScript = useCallback(() => {\n    endSpeaking();\n    // const lastSentence = scriptArr.pop() as string;\n    scriptArr.forEach((s) => {\n      speak('五，四，三，二，一．', allSetting.countingRate);\n      speak(s, allSetting.speakingRate);\n      // await pauseSpeaking(5);\n    });\n    // console.log('lastSentence',lastSentence)\n    // speak(lastSentence);\n    // synthesize(scriptText.join(' '));\n  }, [scriptArr]);\n  return {\n    scriptArr, allSetting, playScript, scriptDisplay,\n  };\n};\n\nexport const MCPage = () => {\n  const classes = useStyles();\n  const {\n    scriptDisplay, allSetting, playScript,\n  } = useMCPageHook();\n\n  return (\n    <Card variant=\"outlined\" className={classes.mcCard}>\n      <CurrentSettingDisplay gameSetting={allSetting} />\n      <Typography>\n        {scriptDisplay}\n      </Typography>\n      <div className={classes.playBtnWrap}>\n        <PlayButton playOnClick={playScript} />\n      </div>\n      <div className={classes.playBtnWrap}>\n        <StopButton stopPlaying={endSpeaking} />\n      </div>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\nimport { Dialog, Fab, makeStyles } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { SettingTab } from './SettingTab';\nimport { SettingContextProvider } from '../state/playerSetting';\nimport { MCPage } from './MC';\nimport SettingsIcon from '@material-ui/icons/Settings';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100vw',\n    height: '100vh',\n    position: 'relative',\n    boxSizing: 'border-box',\n    padding: theme.spacing(2),\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n  },\n}));\n\nexport const Main = () => {\n  const classes = useStyles();\n\n  const [isDialogOpen, setIsDialogOpen] = useState<boolean>(true);\n  const btnOnClick = () => {\n    setIsDialogOpen(true);\n  };\n  const closeDialog = () => {\n    setIsDialogOpen(false);\n  };\n\n  return (\n    <SettingContextProvider>\n      <div className={classes.root}>\n        <MCPage />\n        <Dialog open={isDialogOpen} onClose={closeDialog} fullWidth>\n          <SettingTab closeDialog={closeDialog} />\n        </Dialog>\n        <Fab color=\"secondary\" aria-label=\"edit\" onClick={btnOnClick} className={classes.fab}>\n          <SettingsIcon />\n        </Fab>\n      </div>\n    </SettingContextProvider>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Main } from './views/Main';\n\nfunction App(){\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config){\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator){\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin){\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost){\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config){\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null){\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed'){\n            if (navigator.serviceWorker.controller){\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate){\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess){\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config){\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ){\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister(){\n  if ('serviceWorker' in navigator){\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function){\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}