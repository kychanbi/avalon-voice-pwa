{"version":3,"sources":["Constant.tsx","state/playerSetting.tsx","views/SettingTab.tsx","utils/utils.ts","views/MC.tsx","views/Main.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Constants","totalNumberOfPlayers","5","good","evil","6","7","8","9","10","label","isPercivalPresent","isMordredPresent","isMorganaPresent","isOberonPresent","isLancelotPresent","langs","presets","totalNumberOfPlayer","desc","theme","light","palette","type","dark","Object","freeze","SettingProps","defaultFormSettingState","speakingRate","countingRate","isDarkMode","defaultAllSetting","numberOfGood","numberOfEvil","SettingContext","React","createContext","allSetting","editSetting","editAllCharacterSettings","SettingContextProvider","children","useState","currentSetting","setCurrentSetting","setAllSetting","useEffect","total","tempSetting","Provider","value","settingType","useStyle","makeStyles","settingTab","backgroundColor","background","paper","width","height","padding","minWidth","selectFormControl","margin","spacing","sliderWrap","maxWidth","closeBtn","position","top","right","cursor","presetBtn","labels","SettingTab","closeDialog","classes","useContext","formState","setFormState","handleChange","event","name","target","checked","newVal","undefined","handleSliderChange","Array","isArray","className","Fab","onClick","ButtonGroup","color","keys","map","key","Button","id","setting","handlePresetClick","FormControl","InputLabel","Select","labelId","onChange","n","MenuItem","FormGroup","FormControlLabel","control","Checkbox","Typography","gutterBottom","Slider","defaultValue","valueLabelDisplay","min","max","step","findVoiceByLang","voices","window","speechSynthesis","getVoices","foundVoiceArr","filter","v","includes","lang","found","console","debug","speak","text","rate","synth","utterance","SpeechSynthesisUtterance","voice","log","endSpeaking","cancel","useStyles","mcCard","playBtnWrap","textAlign","CurrentSettingDisplay","gameSetting","Box","variant","PlayButton","props","playOnClick","role","tabIndex","onKeyDown","StopButton","stopPlaying","useMCPageHook","scriptArr","setScriptText","scriptDisplay","setScriptDisplay","areVoicesLoaded","setAreVoicesLoad","s","scriptEvil","generateScript","t","x","reduce","ac","curr","concat","onvoiceschanged","length","playScript","useCallback","forEach","MCPage","Card","CircularProgress","root","boxSizing","fab","bottom","fabLeft","left","Main","toggleDarkMode","appliedTheme","useMemo","createMuiTheme","isDialogOpen","setIsDialogOpen","Dialog","open","onClose","fullWidth","aria-label","App","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","document","documentElement","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9b749e8c.chunk.js","sourcesContent":["import { ThemeOptions } from '@material-ui/core/styles/createMuiTheme';\nimport { purple } from '@material-ui/core/colors';\nimport { PresetSetting } from './state/playerSetting';\n\ninterface NumberOfPlayers {\n  good: number,\n  evil: number\n}\n\ninterface ConstantsInterface {\n  totalNumberOfPlayers:\n    Record<string, NumberOfPlayers>,\n  label:\n    Record<string, string>,\n  langs:string[],\n  presets: { [key: string]: PresetSetting; },\n  theme: {\n    light: ThemeOptions,\n    dark: ThemeOptions\n  }\n}\n\nconst Constants: ConstantsInterface = {\n  totalNumberOfPlayers: {\n    5: {\n      good: 3,\n      evil: 2,\n    },\n    6: {\n      good: 4,\n      evil: 2,\n    },\n    7: {\n      good: 4,\n      evil: 3,\n    },\n    8: {\n      good: 5,\n      evil: 3,\n    },\n    9: {\n      good: 6,\n      evil: 3,\n    },\n    10: {\n      good: 6,\n      evil: 4,\n    },\n  },\n  label: {\n    isPercivalPresent: '派西維爾',\n    isMordredPresent: '莫德雷德',\n    isMorganaPresent: '莫甘娜',\n    isOberonPresent: '奧柏倫',\n    isLancelotPresent: '蘭斯洛特',\n  },\n  langs: ['zh-HK', 'yue_HK_#Hant'],\n  presets: {\n    'preset-6': {\n      totalNumberOfPlayer: '6',\n      isPercivalPresent: false,\n      isMordredPresent: true,\n      isMorganaPresent: false,\n      isOberonPresent: false,\n      isLancelotPresent: true,\n      desc: '經典六人',\n    },\n    'preset-7': {\n      totalNumberOfPlayer: '7',\n      isPercivalPresent: false,\n      isMordredPresent: true,\n      isMorganaPresent: false,\n      isOberonPresent: false,\n      isLancelotPresent: true,\n      desc: '經典七人',\n    },\n    'preset-8': {\n      totalNumberOfPlayer: '8',\n      isPercivalPresent: true,\n      isMordredPresent: true,\n      isMorganaPresent: true,\n      isOberonPresent: false,\n      isLancelotPresent: true,\n      desc: '經典八人',\n    },\n  },\n  theme: {\n    light: {\n      palette: {\n        type: 'light',\n      },\n    },\n    dark: {\n      palette: {\n        type: 'dark',\n        // primary: {\n        //   // Purple and green play nicely together.\n        //   main: purple[500],\n        // },\n      },\n    },\n  },\n};\nObject.freeze(Constants);\n\nexport { Constants };\n","import React, { useEffect, useState } from 'react';\nimport { Constants } from '../Constant';\n\nexport interface CharacterSetting {\n  totalNumberOfPlayer: string,\n  isPercivalPresent: boolean,\n  isMordredPresent: boolean,\n  isMorganaPresent: boolean,\n  isOberonPresent: boolean,\n  isLancelotPresent: boolean,\n}\n\nexport interface AllSetting extends CharacterSetting, VoiceSetting {\n  numberOfGood: number,\n  numberOfEvil: number,\n  isDarkMode: boolean,\n}\n\nexport interface VoiceSetting {\n  speakingRate: number,\n  countingRate: number,\n}\n\nexport interface PresetSetting extends CharacterSetting {\n  desc: string\n}\n\nexport interface SettingFormState extends VoiceSetting, CharacterSetting {\n  isDarkMode: boolean,\n}\n\nexport const defaultFormSettingState: SettingFormState = {\n  totalNumberOfPlayer: '5',\n  isPercivalPresent: false,\n  isMordredPresent: false,\n  isMorganaPresent: false,\n  isOberonPresent: false,\n  isLancelotPresent: false,\n  speakingRate: 0.8,\n  countingRate: 0.9,\n  isDarkMode: false,\n\n};\n\nconst defaultAllSetting: AllSetting = {\n  numberOfGood: 3,\n  numberOfEvil: 2,\n  // isDarkMode: false,\n  ...defaultFormSettingState,\n};\n\nexport enum SettingProps {\n  totalNumberOfPlayer = 'totalNumberOfPlayer',\n  isPercivalPresent = 'isPercivalPresent',\n  isMordredPresent = 'isMordredPresent',\n  isMorganaPresent = 'isMorganaPresent',\n  isOberonPresent = 'isOberonPresent',\n  isLancelotPresent = 'isLancelotPresent',\n  isDarkMode = 'isDarkMode'\n  // numberOfGood = 'numberOfGood',\n  // numberOfEvil = 'numberOfEvil',\n}\n\ninterface GoodEvilNumber {\n  numberOfGood: number,\n  numberOfEvil: number\n}\n\nfunction calcGoodEvilNumber(total: string): GoodEvilNumber{\n  return {\n    numberOfGood: Constants.totalNumberOfPlayers[total].good,\n    numberOfEvil: Constants.totalNumberOfPlayers[total].evil,\n  } as GoodEvilNumber;\n}\n\ninterface SettingContextType {\n  allSetting: AllSetting,\n  editSetting: Function,\n  editAllCharacterSettings: Function\n}\n\nexport const SettingContext = React.createContext<SettingContextType>({\n  allSetting: defaultAllSetting,\n  editSetting: () => {\n  },\n  editAllCharacterSettings: () => {\n  },\n});\n\ninterface SettingContextProviderProp {\n  children: React.ReactNode\n}\n\nexport const SettingContextProvider = ({ children }: SettingContextProviderProp) => {\n  const [currentSetting, setCurrentSetting] = useState<SettingFormState>(defaultFormSettingState);\n  const [allSetting, setAllSetting] = useState<AllSetting>(\n    defaultAllSetting,\n  );\n  const editAllCharacterSettings = (value: CharacterSetting) => {\n    const tempSetting = { ...currentSetting, ...value };\n    setCurrentSetting(tempSetting);\n  };\n  const editSetting = (settingType: SettingProps, value: any) => {\n    const tempSetting = { ...currentSetting, [settingType]: value };\n    // console.log('editAllCharacterSettings setCurrentSetting', settingType, value,tempSetting);\n\n    setCurrentSetting(tempSetting);\n  };\n  useEffect(() => {\n    const { numberOfGood, numberOfEvil } = calcGoodEvilNumber(\n      currentSetting.totalNumberOfPlayer ?? defaultFormSettingState.totalNumberOfPlayer,\n    );\n    const tempSetting: AllSetting = {\n      ...currentSetting, numberOfGood, numberOfEvil,\n    };\n    setAllSetting(tempSetting);\n  }, [currentSetting]);\n  return (\n    <SettingContext.Provider value={{ allSetting, editSetting, editAllCharacterSettings }}>\n      {children}\n    </SettingContext.Provider>\n  );\n};\n","import React, { EventHandler, useContext, useState } from 'react';\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  makeStyles,\n  FormControl, FormControlLabel, Checkbox, FormGroup, Slider, Typography, Fab,\n  Button, Container, ButtonGroup,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  defaultFormSettingState, SettingContext, SettingFormState,\n} from '../state/playerSetting';\nimport { Constants } from '../Constant';\n\nconst useStyle = makeStyles((theme) => ({\n  settingTab: {\n    backgroundColor: theme.palette.background.paper,\n    width: '70%',\n    height: '80%',\n    padding: '5em 3em',\n    minWidth: 320,\n  },\n  selectFormControl: {\n    margin: `${theme.spacing(1)}px 0`,\n    minWidth: '10em',\n  },\n  sliderWrap: {\n    maxWidth: '55vw',\n  },\n  closeBtn: {\n    position: 'absolute',\n    top: theme.spacing(3),\n    right: theme.spacing(3),\n    cursor: 'pointer',\n  },\n  presetBtn: {\n    margin: `${theme.spacing(2)}px 0`,\n  },\n}));\n\nconst labels = Constants.label;\n\nconst SettingTab = ({ closeDialog }: { closeDialog: EventHandler<any> }) => {\n  const classes = useStyle();\n  const { allSetting, editSetting, editAllCharacterSettings } = useContext(SettingContext);\n  const [formState, setFormState] = useState<SettingFormState>(\n    allSetting ?? defaultFormSettingState,\n  );\n\n  const handleChange = <K extends keyof SettingFormState>(\n    event: React.ChangeEvent<{ name?: string | undefined, value: unknown, checked?: boolean }>,\n  ) => {\n    const name = event.target.name as K;\n    const value = event.target.value as SettingFormState[K];\n    const checked = event.target.checked as boolean;\n    const newVal = checked === undefined ? value : checked;\n    setFormState({ ...formState, [name]: newVal });\n    editSetting(name, newVal);\n  };\n  const handleSliderChange = (name: string) => (\n    event: React.ChangeEvent<{}>,\n    value: number | number[],\n  ) => {\n    if (Array.isArray(value)) return;\n    setFormState({ ...formState, [name]: value });\n    editSetting(name, value);\n  };\n\n  const handlePresetClick = (id: string) => {\n    const setting = Constants.presets[id];\n    setFormState({ ...formState, ...setting });\n    editAllCharacterSettings(setting);\n  };\n\n  return (\n    <div className={classes.settingTab}>\n      <Fab className={classes.closeBtn} onClick={closeDialog}>\n        <CloseIcon />\n      </Fab>\n      <ButtonGroup className={classes.presetBtn} color='default'>\n        {Object.keys(Constants.presets).map((key) => (\n          <Button key={key} id={key} onClick={(() => handlePresetClick(key))}>\n            {' '}\n            {Constants.presets[key].desc}\n          </Button>\n        ))}\n      </ButtonGroup>\n      <FormControl className={classes.selectFormControl}>\n        <InputLabel>總人數</InputLabel>\n        <Select\n          labelId=\"select-total-number-of-player-label\"\n          id=\"select-total-number-of-player\"\n          value={formState.totalNumberOfPlayer}\n          onChange={handleChange}\n          name=\"totalNumberOfPlayer\"\n        >\n          {Object.keys(\n            Constants.totalNumberOfPlayers,\n          ).map(\n            (n) => <MenuItem value={n} key={n}>{n}</MenuItem>,\n          )}\n        </Select>\n      </FormControl>\n      <FormGroup>\n        <FormControlLabel\n          control={(\n            <Checkbox\n              checked={formState.isPercivalPresent}\n              onChange={handleChange}\n              name=\"isPercivalPresent\"\n              color=\"primary\"\n            />\n          )}\n          label={labels.isPercivalPresent}\n        />\n        <FormControlLabel\n          control={(\n            <Checkbox\n              checked={formState.isMordredPresent}\n              onChange={handleChange}\n              name=\"isMordredPresent\"\n              color=\"primary\"\n            />\n          )}\n          label={labels.isMordredPresent}\n        />\n        <FormControlLabel\n          control={(\n            <Checkbox\n              checked={formState.isMorganaPresent}\n              onChange={handleChange}\n              name=\"isMorganaPresent\"\n              color=\"primary\"\n            />\n          )}\n          label={labels.isMorganaPresent}\n        />\n        <FormControlLabel\n          control={(\n            <Checkbox\n              checked={formState.isOberonPresent}\n              onChange={handleChange}\n              name=\"isOberonPresent\"\n              color=\"primary\"\n            />\n          )}\n          label={labels.isOberonPresent}\n        />\n        <FormControlLabel\n          control={(\n            <Checkbox\n              checked={formState.isLancelotPresent}\n              onChange={handleChange}\n              name=\"isLancelotPresent\"\n              color=\"primary\"\n            />\n          )}\n          label={labels.isLancelotPresent}\n        />\n        <div className={classes.sliderWrap}>\n          <Typography gutterBottom>\n            speaking speed :\n            {' '}\n            {formState.speakingRate}\n          </Typography>\n          <Slider\n            name=\"speakingRate\"\n            defaultValue={formState.speakingRate}\n            value={formState.speakingRate}\n            onChange={handleSliderChange('speakingRate')}\n            valueLabelDisplay=\"auto\"\n            min={0.5}\n            max={1.5}\n            step={0.05}\n          />\n        </div>\n        <div className={classes.sliderWrap}>\n          <Typography gutterBottom>\n            counting speed :\n            {' '}\n            {formState.countingRate}\n          </Typography>\n          <Slider\n            name=\"countingRate\"\n            defaultValue={formState.countingRate}\n            value={formState.countingRate}\n            onChange={handleSliderChange('countingRate')}\n            valueLabelDisplay=\"auto\"\n            min={0.6}\n            max={1.6}\n            step={0.06}\n          />\n        </div>\n      </FormGroup>\n    </div>\n  );\n};\nexport { SettingTab };\n","import { Constants } from '../Constant';\n\nexport function findVoiceByLang(langs: string[]): (SpeechSynthesisVoice | undefined){\n  const synth = window.speechSynthesis;\n  const voices: SpeechSynthesisVoice[] = synth.getVoices();\n  const foundVoiceArr = voices.filter((v) => langs.includes(v.lang));\n  const [found] = foundVoiceArr;\n  console.debug(voices);\n  console.debug(langs);\n  console.debug(found);\n  return found;\n  // synth.voice\n}\nexport async function sleep(ms: number){\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n// export function initVoice(){\n// setVoice(Constants.voice);\n// }\n\n\nexport function speak(text: string, rate = 1){\n  const synth = window.speechSynthesis;\n  const utterance = new SpeechSynthesisUtterance(text);\n  utterance.voice = findVoiceByLang(Constants.langs) as SpeechSynthesisVoice;\n  utterance.lang = utterance.voice?.lang;\n  utterance.rate = rate;\n  // synth.cancel();\n  synth.speak(utterance);\n  console.log(text);\n  // console.log(scriptArr);\n  console.log(utterance);\n  // synth.resume();\n  // synth.cancel();\n}\n\nexport async function pauseSpeaking(s: number){\n  const synth = window.speechSynthesis;\n  synth.pause();\n  await sleep(s * 1000);\n  synth.resume();\n}\n\nexport function endSpeaking(){\n  const synth = window.speechSynthesis;\n  synth.cancel();\n}\n","import React, {\n  EventHandler, useCallback, useContext, useEffect, useState,\n} from 'react';\nimport {\n  Box, Card, CircularProgress, Fab, makeStyles, Typography,\n} from '@material-ui/core';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport { AllSetting, SettingContext } from '../state/playerSetting';\nimport {\n  endSpeaking, speak,\n} from '../utils/utils';\n\ninterface settingDisplayProps {\n  gameSetting: AllSetting\n}\n\nconst useStyles = makeStyles((theme) => ({\n  mcCard: {\n    padding: theme.spacing(2),\n  },\n  playBtnWrap: {\n    width: '100%',\n    padding: '1em 0',\n    textAlign: 'center',\n  },\n}));\n\nconst CurrentSettingDisplay = ({ gameSetting }: settingDisplayProps) => {\n  const {\n    numberOfGood, numberOfEvil, totalNumberOfPlayer,\n  } = gameSetting;\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">\n        總人數:\n        {' '}\n        {totalNumberOfPlayer}\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        好人:\n        {' '}\n        {numberOfGood}\n        {' '}\n        個\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        壞人:\n        {' '}\n        {numberOfEvil}\n        {' '}\n        個\n      </Typography>\n    </Box>\n  );\n};\nconst generateScript = ({\n  isLancelotPresent,\n  isMordredPresent,\n  isMorganaPresent,\n  isOberonPresent,\n  isPercivalPresent,\n}: AllSetting): string[] => {\n  // let numOtherEvil = numberOfEvil;\n  // isMordredPresent && numOtherEvil--;\n  // isOberonPresent && numOtherEvil--;\n  // isMorganaPresent && numOtherEvil--;\n  // isLancelotPresent && numOtherEvil--;\n\n  // const script1 = '';\n  // let scriptEvil = '所有人合埋眼，伸手握拳放係枱上，所有壞人開眼';\n  let scriptEvil = '所有壞人擘大眼';\n  if (isLancelotPresent && isOberonPresent) scriptEvil = `除【奧柏倫同壞蘭斯洛特】以外，${scriptEvil}，壞蘭斯洛特豎起手指公`;\n  else if (isOberonPresent) scriptEvil = `除左【奧柏倫】以外，${scriptEvil}`;\n  else if (isLancelotPresent) scriptEvil = `除左【壞蘭斯洛特】以外，${scriptEvil}，壞蘭斯洛特豎起手指公`;\n  const scriptEvil2 = '所有壞人合埋眼';\n  const scriptEvil3 = `${isMordredPresent ? '除左【莫德雷德】以外，' : ''}壞人豎起手指公。梅林擘大眼`;\n  // const numOfEvilShown = numberOfEvil - (+isMordredPresent);\n  // const scriptGood = '';\n  // ，`總共有 ${numOfEvilShown} 個壞人，如果數目有錯，請出聲。`;\n  const scriptGood2 = '梅林合埋眼，壞人收起手指公';\n  const scriptGood3 = isPercivalPresent ? `【梅林】${isMorganaPresent ? '及【莫甘娜】' : ''} 豎起手指公，【派西維爾】擘大眼。\n` : '';\n  const scriptGood4 = isPercivalPresent ? `【梅林】${isMorganaPresent ? '及【莫甘娜】' : ''} 收起手指公，【派西維爾】合埋眼。` : '';\n  const scriptGood5 = '所有人擘大眼';\n  return [\n    scriptEvil, scriptEvil2, scriptEvil3,\n    scriptGood2, scriptGood3, scriptGood4, scriptGood5,\n  ].filter((s) => !!s);\n};\n\nconst addLineBreaksToScript = (script: string[]): (string | JSX.Element)[] => (script).map(\n  // eslint-disable-next-line react/jsx-key\n  (x) => [x, <br />],\n).reduce(\n  (ac, curr) => (ac.concat(curr)), [],\n);\n\nconst PlayButton = (props: { playOnClick: EventHandler<any> }) => {\n  const { playOnClick } = props;\n  return (\n    <div onClick={playOnClick} role=\"button\" tabIndex={0} onKeyDown={playOnClick}>\n      <Fab variant=\"extended\" color=\"primary\">\n        <PlayArrowIcon />\n        {' '}\n        Click to Play Script\n      </Fab>\n    </div>\n  );\n};\n\nconst StopButton = (props: { stopPlaying: EventHandler<any> }) => {\n  const { stopPlaying } = props;\n  return (\n    <div onClick={stopPlaying} role=\"button\" tabIndex={0} onKeyDown={stopPlaying}>\n      <Fab variant=\"extended\" color=\"secondary\">\n        <StopIcon />\n      </Fab>\n    </div>\n  );\n};\n\nconst useMCPageHook = () => {\n  // const synthesize = useSynthesize();\n\n  const { allSetting } = useContext(SettingContext);\n  const [scriptArr, setScriptText] = useState<string[]>([]);\n  const [scriptDisplay, setScriptDisplay] = useState<(string | JSX.Element)[]>([]);\n  const [areVoicesLoaded, setAreVoicesLoad] = useState(false);\n  useEffect(() => {\n    const s = generateScript(allSetting);\n    const t = addLineBreaksToScript(s);\n    setScriptText(s);\n    setScriptDisplay(t);\n  }, [allSetting]);\n\n  useEffect(() => {\n    const synth = window.speechSynthesis;\n    synth.getVoices();\n    synth.onvoiceschanged = () => {\n      const voices = synth.getVoices();\n      if (voices.length > 0){\n        setAreVoicesLoad(true);\n      }\n    };\n  }, []);\n  const playScript = useCallback(() => {\n    endSpeaking();\n    scriptArr.forEach((s) => {\n      speak('三，二，一．', allSetting.countingRate);\n      speak(s, allSetting.speakingRate);\n    });\n  }, [scriptArr]);\n  return {\n    scriptArr, allSetting, playScript, scriptDisplay, areVoicesLoaded,\n  };\n};\n\nexport const MCPage = () => {\n  const classes = useStyles();\n  const {\n    scriptDisplay, allSetting, playScript, areVoicesLoaded,\n  } = useMCPageHook();\n  return (\n    <Card variant=\"outlined\" className={classes.mcCard}>\n      <CurrentSettingDisplay gameSetting={allSetting} />\n      <Typography>\n        {scriptDisplay}\n      </Typography>\n      <div className={classes.playBtnWrap}>\n        {areVoicesLoaded ? <PlayButton playOnClick={playScript} /> : <CircularProgress />}\n      </div>\n      <div className={classes.playBtnWrap}>\n        <StopButton stopPlaying={endSpeaking} />\n      </div>\n    </Card>\n  );\n};\n","import React, {\n  useCallback, useContext, useMemo, useState,\n} from 'react';\nimport {\n  createMuiTheme, Dialog, Fab, makeStyles, MuiThemeProvider,\n} from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport BrightnessMediumIcon from '@material-ui/icons/BrightnessMedium';\nimport { SettingTab } from './SettingTab';\nimport { SettingContext } from '../state/playerSetting';\nimport { MCPage } from './MC';\nimport { Constants } from '../Constant';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100vw',\n    height: '100vh',\n    position: 'relative',\n    boxSizing: 'border-box',\n    padding: theme.spacing(2),\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n  },\n  fabLeft: {\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    left: theme.spacing(3),\n  },\n}));\n\nexport const Main = () => {\n  const classes = useStyles();\n  const { allSetting, editSetting } = useContext(SettingContext);\n  const [isDarkModeCurr, setIsDarkModeCurr] = useState<boolean>(allSetting.isDarkMode);\n  const toggleDarkMode = useCallback(() => {\n    const { isDarkMode } = allSetting;\n    editSetting('isDarkMode', !isDarkMode);\n    // setIsDarkModeCurr(!isDarkModeCurr)\n  }, [allSetting.isDarkMode, editSetting]);\n\n  const appliedTheme = useMemo(\n    () => createMuiTheme(allSetting.isDarkMode ? Constants.theme.dark : Constants.theme.light),\n    [allSetting],\n  );\n\n  const [isDialogOpen, setIsDialogOpen] = useState<boolean>(true);\n  const btnOnClick = () => {\n    setIsDialogOpen(true);\n  };\n  const closeDialog = () => {\n    setIsDialogOpen(false);\n  };\n\n  return (\n    <MuiThemeProvider theme={appliedTheme}>\n      <div className={classes.root}>\n        <MCPage />\n        <Dialog open={isDialogOpen} onClose={closeDialog} fullWidth>\n          <SettingTab closeDialog={closeDialog} />\n        </Dialog>\n        <Fab color=\"secondary\" aria-label=\"edit\" onClick={btnOnClick} className={classes.fab}>\n          <SettingsIcon />\n        </Fab>\n        <Fab color=\"secondary\" aria-label=\"toggle dark mode\" onClick={toggleDarkMode} className={classes.fabLeft}>\n          <BrightnessMediumIcon />\n        </Fab>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { Main } from './views/Main';\nimport { SettingContextProvider } from './state/playerSetting';\n\nfunction App(){\n  return (\n    <SettingContextProvider>\n      <Main />\n    </SettingContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config){\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator){\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin){\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost){\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config){\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null){\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed'){\n            if (navigator.serviceWorker.controller){\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate){\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess){\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config){\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ){\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister(){\n  if ('serviceWorker' in navigator){\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function){\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\ndocument.documentElement.lang = 'zh-HK';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}